// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "gauss_blur.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gauss_blur::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gauss_blur::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<13> gauss_blur::ap_ST_fsm_state1 = "1";
const sc_lv<13> gauss_blur::ap_ST_fsm_state2 = "10";
const sc_lv<13> gauss_blur::ap_ST_fsm_state3 = "100";
const sc_lv<13> gauss_blur::ap_ST_fsm_state4 = "1000";
const sc_lv<13> gauss_blur::ap_ST_fsm_state5 = "10000";
const sc_lv<13> gauss_blur::ap_ST_fsm_state6 = "100000";
const sc_lv<13> gauss_blur::ap_ST_fsm_state7 = "1000000";
const sc_lv<13> gauss_blur::ap_ST_fsm_state8 = "10000000";
const sc_lv<13> gauss_blur::ap_ST_fsm_state9 = "100000000";
const sc_lv<13> gauss_blur::ap_ST_fsm_state10 = "1000000000";
const sc_lv<13> gauss_blur::ap_ST_fsm_state11 = "10000000000";
const sc_lv<13> gauss_blur::ap_ST_fsm_state12 = "100000000000";
const sc_lv<13> gauss_blur::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<32> gauss_blur::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> gauss_blur::ap_const_lv32_1 = "1";
const sc_lv<1> gauss_blur::ap_const_lv1_0 = "0";
const sc_lv<32> gauss_blur::ap_const_lv32_2 = "10";
const sc_lv<32> gauss_blur::ap_const_lv32_4 = "100";
const sc_lv<32> gauss_blur::ap_const_lv32_5 = "101";
const sc_lv<32> gauss_blur::ap_const_lv32_6 = "110";
const sc_lv<32> gauss_blur::ap_const_lv32_7 = "111";
const sc_lv<1> gauss_blur::ap_const_lv1_1 = "1";
const sc_lv<32> gauss_blur::ap_const_lv32_9 = "1001";
const sc_lv<32> gauss_blur::ap_const_lv32_A = "1010";
const sc_lv<32> gauss_blur::ap_const_lv32_B = "1011";
const sc_lv<32> gauss_blur::ap_const_lv32_C = "1100";
const sc_lv<2> gauss_blur::ap_const_lv2_0 = "00";
const sc_lv<32> gauss_blur::ap_const_lv32_3 = "11";
const sc_lv<10> gauss_blur::ap_const_lv10_0 = "0000000000";
const sc_lv<9> gauss_blur::ap_const_lv9_0 = "000000000";
const sc_lv<32> gauss_blur::ap_const_lv32_8 = "1000";
const sc_lv<64> gauss_blur::ap_const_lv64_2 = "10";
const sc_lv<64> gauss_blur::ap_const_lv64_5 = "101";
const sc_lv<64> gauss_blur::ap_const_lv64_8 = "1000";
const sc_lv<8> gauss_blur::ap_const_lv8_0 = "00000000";
const sc_lv<2> gauss_blur::ap_const_lv2_3 = "11";
const sc_lv<2> gauss_blur::ap_const_lv2_1 = "1";
const sc_lv<10> gauss_blur::ap_const_lv10_281 = "1010000001";
const sc_lv<10> gauss_blur::ap_const_lv10_1 = "1";
const sc_lv<10> gauss_blur::ap_const_lv10_280 = "1010000000";
const sc_lv<5> gauss_blur::ap_const_lv5_0 = "00000";
const sc_lv<11> gauss_blur::ap_const_lv11_7FF = "11111111111";
const sc_lv<11> gauss_blur::ap_const_lv11_0 = "00000000000";
const sc_lv<11> gauss_blur::ap_const_lv11_27F = "1001111111";
const sc_lv<9> gauss_blur::ap_const_lv9_1E1 = "111100001";
const sc_lv<9> gauss_blur::ap_const_lv9_1 = "1";
const sc_lv<9> gauss_blur::ap_const_lv9_1E0 = "111100000";
const sc_lv<5> gauss_blur::ap_const_lv5_1 = "1";
const sc_lv<5> gauss_blur::ap_const_lv5_2 = "10";
const sc_lv<9> gauss_blur::ap_const_lv9_1FF = "111111111";
const sc_lv<9> gauss_blur::ap_const_lv9_1DF = "111011111";
const sc_lv<32> gauss_blur::ap_const_lv32_1F = "11111";
const bool gauss_blur::ap_const_boolean_1 = true;

gauss_blur::gauss_blur(sc_module_name name) : sc_module(name), mVcdFile(0) {
    window_U = new gauss_blur_window("window_U");
    window_U->clk(ap_clk);
    window_U->reset(ap_rst);
    window_U->address0(window_address0);
    window_U->ce0(window_ce0);
    window_U->we0(window_we0);
    window_U->d0(window_d0);
    window_U->q0(window_q0);
    window_U->address1(window_address1);
    window_U->ce1(window_ce1);
    window_U->we1(window_we1);
    window_U->d1(window_d1);
    window_U->q1(window_q1);
    kernel_U = new gauss_blur_kernel("kernel_U");
    kernel_U->clk(ap_clk);
    kernel_U->reset(ap_rst);
    kernel_U->address0(kernel_address0);
    kernel_U->ce0(kernel_ce0);
    kernel_U->we0(kernel_we0);
    kernel_U->d0(gauss_kernel_q0);
    kernel_U->q0(kernel_q0);
    part_buffer_0_U = new gauss_blur_part_bbkb("part_buffer_0_U");
    part_buffer_0_U->clk(ap_clk);
    part_buffer_0_U->reset(ap_rst);
    part_buffer_0_U->address0(part_buffer_0_address0);
    part_buffer_0_U->ce0(part_buffer_0_ce0);
    part_buffer_0_U->we0(part_buffer_0_we0);
    part_buffer_0_U->d0(part_buffer_1_q0);
    part_buffer_0_U->q0(part_buffer_0_q0);
    part_buffer_1_U = new gauss_blur_part_bbkb("part_buffer_1_U");
    part_buffer_1_U->clk(ap_clk);
    part_buffer_1_U->reset(ap_rst);
    part_buffer_1_U->address0(part_buffer_1_address0);
    part_buffer_1_U->ce0(part_buffer_1_ce0);
    part_buffer_1_U->we0(part_buffer_1_we0);
    part_buffer_1_U->d0(select_ln49_reg_959);
    part_buffer_1_U->q0(part_buffer_1_q0);
    gauss_blur_mac_mudEe_U1 = new gauss_blur_mac_mudEe<1,1,8,8,32,32>("gauss_blur_mac_mudEe_U1");
    gauss_blur_mac_mudEe_U1->din0(grp_fu_843_p0);
    gauss_blur_mac_mudEe_U1->din1(grp_fu_843_p1);
    gauss_blur_mac_mudEe_U1->din2(result_1_i_reg_359);
    gauss_blur_mac_mudEe_U1->dout(grp_fu_843_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln16_fu_824_p2);
    sensitive << ( sub_ln16_reg_1019 );
    sensitive << ( zext_ln16_5_fu_820_p1 );

    SC_METHOD(thread_add_ln40_fu_432_p2);
    sensitive << ( sub_ln40_reg_874 );
    sensitive << ( zext_ln40_2_fu_428_p1 );

    SC_METHOD(thread_add_ln50_fu_560_p2);
    sensitive << ( sub_ln50_reg_910 );
    sensitive << ( zext_ln50_3_fu_556_p1 );

    SC_METHOD(thread_add_ln55_fu_627_p2);
    sensitive << ( sub_ln55_fu_621_p2 );

    SC_METHOD(thread_add_ln56_fu_638_p2);
    sensitive << ( sub_ln55_fu_621_p2 );

    SC_METHOD(thread_add_ln73_fu_702_p2);
    sensitive << ( sub_ln73_reg_930 );
    sensitive << ( zext_ln73_fu_698_p1 );

    SC_METHOD(thread_add_ln75_fu_798_p2);
    sensitive << ( sub_ln73_reg_930 );
    sensitive << ( zext_ln75_fu_795_p1 );

    SC_METHOD(thread_and_ln49_fu_576_p2);
    sensitive << ( icmp_ln49_reg_905 );
    sensitive << ( icmp_ln49_1_fu_570_p2 );

    SC_METHOD(thread_and_ln67_fu_659_p2);
    sensitive << ( icmp_ln67_reg_915 );
    sensitive << ( icmp_ln67_1_fu_653_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln45_fu_446_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln45_fu_446_p2 );

    SC_METHOD(thread_col_fu_550_p2);
    sensitive << ( col_0_reg_313 );

    SC_METHOD(thread_gauss_kernel_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln40_fu_437_p1 );

    SC_METHOD(thread_gauss_kernel_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_843_p0);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( grp_fu_843_p00 );

    SC_METHOD(thread_grp_fu_843_p00);
    sensitive << ( kernel_q0 );

    SC_METHOD(thread_grp_fu_843_p1);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( grp_fu_843_p10 );

    SC_METHOD(thread_grp_fu_843_p10);
    sensitive << ( window_q1 );

    SC_METHOD(thread_i_1_fu_599_p2);
    sensitive << ( i1_0_reg_325 );

    SC_METHOD(thread_i_2_fu_718_p2);
    sensitive << ( i_0_i_reg_348 );

    SC_METHOD(thread_i_fu_388_p2);
    sensitive << ( i_0_reg_280 );

    SC_METHOD(thread_icmp_ln14_fu_712_p2);
    sensitive << ( and_ln67_reg_998 );
    sensitive << ( or_ln72_2_reg_1007 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( i_0_i_reg_348 );

    SC_METHOD(thread_icmp_ln15_fu_808_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( j_0_i_reg_371 );

    SC_METHOD(thread_icmp_ln38_fu_382_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_280 );

    SC_METHOD(thread_icmp_ln39_fu_416_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_291 );

    SC_METHOD(thread_icmp_ln45_fu_446_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( row_0_reg_302 );

    SC_METHOD(thread_icmp_ln46_fu_544_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( col_0_reg_313 );

    SC_METHOD(thread_icmp_ln49_1_fu_570_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( col_0_reg_313 );

    SC_METHOD(thread_icmp_ln49_fu_458_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln45_fu_446_p2 );
    sensitive << ( row_0_reg_302 );

    SC_METHOD(thread_icmp_ln54_fu_593_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i1_0_reg_325 );

    SC_METHOD(thread_icmp_ln67_1_fu_653_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( col_0_reg_313 );

    SC_METHOD(thread_icmp_ln67_fu_494_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln45_fu_446_p2 );
    sensitive << ( row_0_reg_302 );

    SC_METHOD(thread_icmp_ln72_1_fu_512_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln45_fu_446_p2 );
    sensitive << ( outrow_fu_500_p2 );

    SC_METHOD(thread_icmp_ln72_2_fu_670_p2);
    sensitive << ( and_ln67_fu_659_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( outcol_fu_664_p2 );

    SC_METHOD(thread_icmp_ln72_3_fu_676_p2);
    sensitive << ( and_ln67_fu_659_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( outcol_fu_664_p2 );

    SC_METHOD(thread_icmp_ln72_fu_506_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln45_fu_446_p2 );
    sensitive << ( outrow_fu_500_p2 );

    SC_METHOD(thread_inImage_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( sext_ln50_fu_565_p1 );

    SC_METHOD(thread_inImage_ce0);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_j_1_fu_814_p2);
    sensitive << ( j_0_i_reg_371 );

    SC_METHOD(thread_j_fu_422_p2);
    sensitive << ( j_0_reg_291 );

    SC_METHOD(thread_kernel_address0);
    sensitive << ( sext_ln40_reg_887 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln16_fu_829_p1 );

    SC_METHOD(thread_kernel_ce0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_kernel_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_or_ln72_1_fu_687_p2);
    sensitive << ( icmp_ln72_1_reg_925 );
    sensitive << ( icmp_ln72_3_fu_676_p2 );

    SC_METHOD(thread_or_ln72_2_fu_692_p2);
    sensitive << ( or_ln72_1_fu_687_p2 );
    sensitive << ( or_ln72_fu_682_p2 );

    SC_METHOD(thread_or_ln72_fu_682_p2);
    sensitive << ( icmp_ln72_reg_920 );
    sensitive << ( icmp_ln72_2_fu_670_p2 );

    SC_METHOD(thread_outImage_address0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( sext_ln73_1_fu_707_p1 );
    sensitive << ( sext_ln75_fu_803_p1 );

    SC_METHOD(thread_outImage_ce0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_outImage_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( select_ln21_fu_786_p3 );

    SC_METHOD(thread_outImage_we0);
    sensitive << ( and_ln67_fu_659_p2 );
    sensitive << ( and_ln67_reg_998 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( or_ln72_2_fu_692_p2 );
    sensitive << ( or_ln72_2_reg_1007 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln14_fu_712_p2 );

    SC_METHOD(thread_outcol_fu_664_p2);
    sensitive << ( col_0_reg_313 );

    SC_METHOD(thread_outrow_fu_500_p2);
    sensitive << ( zext_ln45_fu_442_p1 );

    SC_METHOD(thread_part_buffer_0_address0);
    sensitive << ( zext_ln50_1_reg_953 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( part_buffer_0_addr_reg_988 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_part_buffer_0_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_part_buffer_0_we0);
    sensitive << ( icmp_ln49_1_reg_949 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_part_buffer_1_address0);
    sensitive << ( icmp_ln49_1_reg_949 );
    sensitive << ( zext_ln50_1_reg_953 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln54_fu_593_p2 );

    SC_METHOD(thread_part_buffer_1_ce0);
    sensitive << ( icmp_ln49_1_reg_949 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln54_fu_593_p2 );

    SC_METHOD(thread_part_buffer_1_we0);
    sensitive << ( icmp_ln49_1_reg_949 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln54_fu_593_p2 );

    SC_METHOD(thread_row_fu_452_p2);
    sensitive << ( row_0_reg_302 );

    SC_METHOD(thread_select_ln21_fu_786_p3);
    sensitive << ( tmp_9_fu_746_p3 );
    sensitive << ( sub_ln21_1_fu_770_p2 );
    sensitive << ( trunc_ln21_2_fu_776_p4 );

    SC_METHOD(thread_select_ln49_fu_585_p3);
    sensitive << ( inImage_q0 );
    sensitive << ( and_ln49_fu_576_p2 );

    SC_METHOD(thread_sext_ln16_fu_829_p1);
    sensitive << ( add_ln16_fu_824_p2 );

    SC_METHOD(thread_sext_ln40_fu_437_p1);
    sensitive << ( add_ln40_fu_432_p2 );

    SC_METHOD(thread_sext_ln50_fu_565_p1);
    sensitive << ( add_ln50_fu_560_p2 );

    SC_METHOD(thread_sext_ln55_1_fu_633_p1);
    sensitive << ( add_ln55_fu_627_p2 );

    SC_METHOD(thread_sext_ln55_fu_649_p1);
    sensitive << ( sub_ln55_reg_973 );

    SC_METHOD(thread_sext_ln56_fu_644_p1);
    sensitive << ( add_ln56_fu_638_p2 );

    SC_METHOD(thread_sext_ln73_1_fu_707_p1);
    sensitive << ( add_ln73_fu_702_p2 );

    SC_METHOD(thread_sext_ln73_fu_534_p1);
    sensitive << ( tmp_6_fu_526_p3 );

    SC_METHOD(thread_sext_ln75_fu_803_p1);
    sensitive << ( add_ln75_fu_798_p2 );

    SC_METHOD(thread_sub_ln16_fu_740_p2);
    sensitive << ( zext_ln16_1_fu_736_p1 );
    sensitive << ( zext_ln16_fu_724_p1 );

    SC_METHOD(thread_sub_ln21_1_fu_770_p2);
    sensitive << ( trunc_ln21_1_fu_760_p4 );

    SC_METHOD(thread_sub_ln21_fu_754_p2);
    sensitive << ( result_0_i_reg_336 );

    SC_METHOD(thread_sub_ln40_fu_410_p2);
    sensitive << ( zext_ln40_1_fu_406_p1 );
    sensitive << ( zext_ln40_fu_394_p1 );

    SC_METHOD(thread_sub_ln50_fu_488_p2);
    sensitive << ( zext_ln50_fu_472_p1 );
    sensitive << ( zext_ln50_2_fu_484_p1 );

    SC_METHOD(thread_sub_ln55_fu_621_p2);
    sensitive << ( zext_ln55_1_fu_617_p1 );
    sensitive << ( zext_ln55_fu_605_p1 );

    SC_METHOD(thread_sub_ln73_fu_538_p2);
    sensitive << ( tmp_5_fu_518_p3 );
    sensitive << ( sext_ln73_fu_534_p1 );

    SC_METHOD(thread_tmp_2_fu_398_p3);
    sensitive << ( i_0_reg_280 );

    SC_METHOD(thread_tmp_3_fu_464_p3);
    sensitive << ( row_0_reg_302 );

    SC_METHOD(thread_tmp_4_fu_476_p3);
    sensitive << ( row_0_reg_302 );

    SC_METHOD(thread_tmp_5_fu_518_p3);
    sensitive << ( outrow_fu_500_p2 );

    SC_METHOD(thread_tmp_6_fu_526_p3);
    sensitive << ( outrow_fu_500_p2 );

    SC_METHOD(thread_tmp_7_fu_609_p3);
    sensitive << ( i1_0_reg_325 );

    SC_METHOD(thread_tmp_8_fu_728_p3);
    sensitive << ( i_0_i_reg_348 );

    SC_METHOD(thread_tmp_9_fu_746_p3);
    sensitive << ( result_0_i_reg_336 );

    SC_METHOD(thread_trunc_ln21_1_fu_760_p4);
    sensitive << ( sub_ln21_fu_754_p2 );

    SC_METHOD(thread_trunc_ln21_2_fu_776_p4);
    sensitive << ( result_0_i_reg_336 );

    SC_METHOD(thread_window_address0);
    sensitive << ( icmp_ln49_1_reg_949 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln54_fu_593_p2 );
    sensitive << ( window_addr_3_reg_978 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sext_ln55_1_fu_633_p1 );

    SC_METHOD(thread_window_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sext_ln56_fu_644_p1 );
    sensitive << ( sext_ln55_fu_649_p1 );
    sensitive << ( sext_ln16_fu_829_p1 );

    SC_METHOD(thread_window_ce0);
    sensitive << ( icmp_ln49_1_reg_949 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln54_fu_593_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_window_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_window_d0);
    sensitive << ( icmp_ln49_1_reg_949 );
    sensitive << ( select_ln49_reg_959 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln54_fu_593_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( window_q1 );
    sensitive << ( part_buffer_1_q0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_window_d1);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( window_q0 );
    sensitive << ( part_buffer_0_q0 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_window_we0);
    sensitive << ( icmp_ln49_1_reg_949 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln54_fu_593_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_window_we1);
    sensitive << ( icmp_ln49_1_reg_949 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_zext_ln16_1_fu_736_p1);
    sensitive << ( tmp_8_fu_728_p3 );

    SC_METHOD(thread_zext_ln16_5_fu_820_p1);
    sensitive << ( j_0_i_reg_371 );

    SC_METHOD(thread_zext_ln16_fu_724_p1);
    sensitive << ( i_0_i_reg_348 );

    SC_METHOD(thread_zext_ln40_1_fu_406_p1);
    sensitive << ( tmp_2_fu_398_p3 );

    SC_METHOD(thread_zext_ln40_2_fu_428_p1);
    sensitive << ( j_0_reg_291 );

    SC_METHOD(thread_zext_ln40_fu_394_p1);
    sensitive << ( i_0_reg_280 );

    SC_METHOD(thread_zext_ln45_fu_442_p1);
    sensitive << ( row_0_reg_302 );

    SC_METHOD(thread_zext_ln50_1_fu_581_p1);
    sensitive << ( col_0_reg_313 );

    SC_METHOD(thread_zext_ln50_2_fu_484_p1);
    sensitive << ( tmp_4_fu_476_p3 );

    SC_METHOD(thread_zext_ln50_3_fu_556_p1);
    sensitive << ( col_0_reg_313 );

    SC_METHOD(thread_zext_ln50_fu_472_p1);
    sensitive << ( tmp_3_fu_464_p3 );

    SC_METHOD(thread_zext_ln55_1_fu_617_p1);
    sensitive << ( tmp_7_fu_609_p3 );

    SC_METHOD(thread_zext_ln55_fu_605_p1);
    sensitive << ( i1_0_reg_325 );

    SC_METHOD(thread_zext_ln73_fu_698_p1);
    sensitive << ( outcol_fu_664_p2 );

    SC_METHOD(thread_zext_ln75_fu_795_p1);
    sensitive << ( outcol_reg_1002 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln38_fu_382_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln39_fu_416_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( icmp_ln45_fu_446_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln46_fu_544_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln54_fu_593_p2 );
    sensitive << ( and_ln67_reg_998 );
    sensitive << ( or_ln72_2_reg_1007 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln14_fu_712_p2 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln15_fu_808_p2 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gauss_blur_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, inImage_address0, "(port)inImage_address0");
    sc_trace(mVcdFile, inImage_ce0, "(port)inImage_ce0");
    sc_trace(mVcdFile, inImage_q0, "(port)inImage_q0");
    sc_trace(mVcdFile, gauss_kernel_address0, "(port)gauss_kernel_address0");
    sc_trace(mVcdFile, gauss_kernel_ce0, "(port)gauss_kernel_ce0");
    sc_trace(mVcdFile, gauss_kernel_q0, "(port)gauss_kernel_q0");
    sc_trace(mVcdFile, outImage_address0, "(port)outImage_address0");
    sc_trace(mVcdFile, outImage_ce0, "(port)outImage_ce0");
    sc_trace(mVcdFile, outImage_we0, "(port)outImage_we0");
    sc_trace(mVcdFile, outImage_d0, "(port)outImage_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_fu_388_p2, "i_fu_388_p2");
    sc_trace(mVcdFile, i_reg_869, "i_reg_869");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln40_fu_410_p2, "sub_ln40_fu_410_p2");
    sc_trace(mVcdFile, sub_ln40_reg_874, "sub_ln40_reg_874");
    sc_trace(mVcdFile, icmp_ln38_fu_382_p2, "icmp_ln38_fu_382_p2");
    sc_trace(mVcdFile, j_fu_422_p2, "j_fu_422_p2");
    sc_trace(mVcdFile, j_reg_882, "j_reg_882");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, sext_ln40_fu_437_p1, "sext_ln40_fu_437_p1");
    sc_trace(mVcdFile, sext_ln40_reg_887, "sext_ln40_reg_887");
    sc_trace(mVcdFile, icmp_ln39_fu_416_p2, "icmp_ln39_fu_416_p2");
    sc_trace(mVcdFile, row_fu_452_p2, "row_fu_452_p2");
    sc_trace(mVcdFile, row_reg_900, "row_reg_900");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, icmp_ln49_fu_458_p2, "icmp_ln49_fu_458_p2");
    sc_trace(mVcdFile, icmp_ln49_reg_905, "icmp_ln49_reg_905");
    sc_trace(mVcdFile, icmp_ln45_fu_446_p2, "icmp_ln45_fu_446_p2");
    sc_trace(mVcdFile, sub_ln50_fu_488_p2, "sub_ln50_fu_488_p2");
    sc_trace(mVcdFile, sub_ln50_reg_910, "sub_ln50_reg_910");
    sc_trace(mVcdFile, icmp_ln67_fu_494_p2, "icmp_ln67_fu_494_p2");
    sc_trace(mVcdFile, icmp_ln67_reg_915, "icmp_ln67_reg_915");
    sc_trace(mVcdFile, icmp_ln72_fu_506_p2, "icmp_ln72_fu_506_p2");
    sc_trace(mVcdFile, icmp_ln72_reg_920, "icmp_ln72_reg_920");
    sc_trace(mVcdFile, icmp_ln72_1_fu_512_p2, "icmp_ln72_1_fu_512_p2");
    sc_trace(mVcdFile, icmp_ln72_1_reg_925, "icmp_ln72_1_reg_925");
    sc_trace(mVcdFile, sub_ln73_fu_538_p2, "sub_ln73_fu_538_p2");
    sc_trace(mVcdFile, sub_ln73_reg_930, "sub_ln73_reg_930");
    sc_trace(mVcdFile, col_fu_550_p2, "col_fu_550_p2");
    sc_trace(mVcdFile, col_reg_939, "col_reg_939");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln46_fu_544_p2, "icmp_ln46_fu_544_p2");
    sc_trace(mVcdFile, icmp_ln49_1_fu_570_p2, "icmp_ln49_1_fu_570_p2");
    sc_trace(mVcdFile, icmp_ln49_1_reg_949, "icmp_ln49_1_reg_949");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln50_1_fu_581_p1, "zext_ln50_1_fu_581_p1");
    sc_trace(mVcdFile, zext_ln50_1_reg_953, "zext_ln50_1_reg_953");
    sc_trace(mVcdFile, select_ln49_fu_585_p3, "select_ln49_fu_585_p3");
    sc_trace(mVcdFile, select_ln49_reg_959, "select_ln49_reg_959");
    sc_trace(mVcdFile, i_1_fu_599_p2, "i_1_fu_599_p2");
    sc_trace(mVcdFile, i_1_reg_968, "i_1_reg_968");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, sub_ln55_fu_621_p2, "sub_ln55_fu_621_p2");
    sc_trace(mVcdFile, sub_ln55_reg_973, "sub_ln55_reg_973");
    sc_trace(mVcdFile, icmp_ln54_fu_593_p2, "icmp_ln54_fu_593_p2");
    sc_trace(mVcdFile, window_addr_3_reg_978, "window_addr_3_reg_978");
    sc_trace(mVcdFile, part_buffer_0_addr_reg_988, "part_buffer_0_addr_reg_988");
    sc_trace(mVcdFile, and_ln67_fu_659_p2, "and_ln67_fu_659_p2");
    sc_trace(mVcdFile, and_ln67_reg_998, "and_ln67_reg_998");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, outcol_fu_664_p2, "outcol_fu_664_p2");
    sc_trace(mVcdFile, outcol_reg_1002, "outcol_reg_1002");
    sc_trace(mVcdFile, or_ln72_2_fu_692_p2, "or_ln72_2_fu_692_p2");
    sc_trace(mVcdFile, or_ln72_2_reg_1007, "or_ln72_2_reg_1007");
    sc_trace(mVcdFile, i_2_fu_718_p2, "i_2_fu_718_p2");
    sc_trace(mVcdFile, i_2_reg_1014, "i_2_reg_1014");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, sub_ln16_fu_740_p2, "sub_ln16_fu_740_p2");
    sc_trace(mVcdFile, sub_ln16_reg_1019, "sub_ln16_reg_1019");
    sc_trace(mVcdFile, icmp_ln14_fu_712_p2, "icmp_ln14_fu_712_p2");
    sc_trace(mVcdFile, j_1_fu_814_p2, "j_1_fu_814_p2");
    sc_trace(mVcdFile, j_1_reg_1027, "j_1_reg_1027");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, icmp_ln15_fu_808_p2, "icmp_ln15_fu_808_p2");
    sc_trace(mVcdFile, grp_fu_843_p3, "grp_fu_843_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, window_address0, "window_address0");
    sc_trace(mVcdFile, window_ce0, "window_ce0");
    sc_trace(mVcdFile, window_we0, "window_we0");
    sc_trace(mVcdFile, window_d0, "window_d0");
    sc_trace(mVcdFile, window_q0, "window_q0");
    sc_trace(mVcdFile, window_address1, "window_address1");
    sc_trace(mVcdFile, window_ce1, "window_ce1");
    sc_trace(mVcdFile, window_we1, "window_we1");
    sc_trace(mVcdFile, window_d1, "window_d1");
    sc_trace(mVcdFile, window_q1, "window_q1");
    sc_trace(mVcdFile, kernel_address0, "kernel_address0");
    sc_trace(mVcdFile, kernel_ce0, "kernel_ce0");
    sc_trace(mVcdFile, kernel_we0, "kernel_we0");
    sc_trace(mVcdFile, kernel_q0, "kernel_q0");
    sc_trace(mVcdFile, part_buffer_0_address0, "part_buffer_0_address0");
    sc_trace(mVcdFile, part_buffer_0_ce0, "part_buffer_0_ce0");
    sc_trace(mVcdFile, part_buffer_0_we0, "part_buffer_0_we0");
    sc_trace(mVcdFile, part_buffer_0_q0, "part_buffer_0_q0");
    sc_trace(mVcdFile, part_buffer_1_address0, "part_buffer_1_address0");
    sc_trace(mVcdFile, part_buffer_1_ce0, "part_buffer_1_ce0");
    sc_trace(mVcdFile, part_buffer_1_we0, "part_buffer_1_we0");
    sc_trace(mVcdFile, part_buffer_1_q0, "part_buffer_1_q0");
    sc_trace(mVcdFile, i_0_reg_280, "i_0_reg_280");
    sc_trace(mVcdFile, j_0_reg_291, "j_0_reg_291");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, row_0_reg_302, "row_0_reg_302");
    sc_trace(mVcdFile, col_0_reg_313, "col_0_reg_313");
    sc_trace(mVcdFile, i1_0_reg_325, "i1_0_reg_325");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, result_0_i_reg_336, "result_0_i_reg_336");
    sc_trace(mVcdFile, i_0_i_reg_348, "i_0_i_reg_348");
    sc_trace(mVcdFile, result_1_i_reg_359, "result_1_i_reg_359");
    sc_trace(mVcdFile, j_0_i_reg_371, "j_0_i_reg_371");
    sc_trace(mVcdFile, sext_ln50_fu_565_p1, "sext_ln50_fu_565_p1");
    sc_trace(mVcdFile, sext_ln55_1_fu_633_p1, "sext_ln55_1_fu_633_p1");
    sc_trace(mVcdFile, sext_ln56_fu_644_p1, "sext_ln56_fu_644_p1");
    sc_trace(mVcdFile, sext_ln55_fu_649_p1, "sext_ln55_fu_649_p1");
    sc_trace(mVcdFile, sext_ln73_1_fu_707_p1, "sext_ln73_1_fu_707_p1");
    sc_trace(mVcdFile, sext_ln75_fu_803_p1, "sext_ln75_fu_803_p1");
    sc_trace(mVcdFile, sext_ln16_fu_829_p1, "sext_ln16_fu_829_p1");
    sc_trace(mVcdFile, select_ln21_fu_786_p3, "select_ln21_fu_786_p3");
    sc_trace(mVcdFile, tmp_2_fu_398_p3, "tmp_2_fu_398_p3");
    sc_trace(mVcdFile, zext_ln40_1_fu_406_p1, "zext_ln40_1_fu_406_p1");
    sc_trace(mVcdFile, zext_ln40_fu_394_p1, "zext_ln40_fu_394_p1");
    sc_trace(mVcdFile, zext_ln40_2_fu_428_p1, "zext_ln40_2_fu_428_p1");
    sc_trace(mVcdFile, add_ln40_fu_432_p2, "add_ln40_fu_432_p2");
    sc_trace(mVcdFile, tmp_3_fu_464_p3, "tmp_3_fu_464_p3");
    sc_trace(mVcdFile, tmp_4_fu_476_p3, "tmp_4_fu_476_p3");
    sc_trace(mVcdFile, zext_ln50_fu_472_p1, "zext_ln50_fu_472_p1");
    sc_trace(mVcdFile, zext_ln50_2_fu_484_p1, "zext_ln50_2_fu_484_p1");
    sc_trace(mVcdFile, zext_ln45_fu_442_p1, "zext_ln45_fu_442_p1");
    sc_trace(mVcdFile, outrow_fu_500_p2, "outrow_fu_500_p2");
    sc_trace(mVcdFile, tmp_6_fu_526_p3, "tmp_6_fu_526_p3");
    sc_trace(mVcdFile, tmp_5_fu_518_p3, "tmp_5_fu_518_p3");
    sc_trace(mVcdFile, sext_ln73_fu_534_p1, "sext_ln73_fu_534_p1");
    sc_trace(mVcdFile, zext_ln50_3_fu_556_p1, "zext_ln50_3_fu_556_p1");
    sc_trace(mVcdFile, add_ln50_fu_560_p2, "add_ln50_fu_560_p2");
    sc_trace(mVcdFile, and_ln49_fu_576_p2, "and_ln49_fu_576_p2");
    sc_trace(mVcdFile, tmp_7_fu_609_p3, "tmp_7_fu_609_p3");
    sc_trace(mVcdFile, zext_ln55_1_fu_617_p1, "zext_ln55_1_fu_617_p1");
    sc_trace(mVcdFile, zext_ln55_fu_605_p1, "zext_ln55_fu_605_p1");
    sc_trace(mVcdFile, add_ln55_fu_627_p2, "add_ln55_fu_627_p2");
    sc_trace(mVcdFile, add_ln56_fu_638_p2, "add_ln56_fu_638_p2");
    sc_trace(mVcdFile, icmp_ln67_1_fu_653_p2, "icmp_ln67_1_fu_653_p2");
    sc_trace(mVcdFile, icmp_ln72_2_fu_670_p2, "icmp_ln72_2_fu_670_p2");
    sc_trace(mVcdFile, icmp_ln72_3_fu_676_p2, "icmp_ln72_3_fu_676_p2");
    sc_trace(mVcdFile, or_ln72_1_fu_687_p2, "or_ln72_1_fu_687_p2");
    sc_trace(mVcdFile, or_ln72_fu_682_p2, "or_ln72_fu_682_p2");
    sc_trace(mVcdFile, zext_ln73_fu_698_p1, "zext_ln73_fu_698_p1");
    sc_trace(mVcdFile, add_ln73_fu_702_p2, "add_ln73_fu_702_p2");
    sc_trace(mVcdFile, tmp_8_fu_728_p3, "tmp_8_fu_728_p3");
    sc_trace(mVcdFile, zext_ln16_1_fu_736_p1, "zext_ln16_1_fu_736_p1");
    sc_trace(mVcdFile, zext_ln16_fu_724_p1, "zext_ln16_fu_724_p1");
    sc_trace(mVcdFile, sub_ln21_fu_754_p2, "sub_ln21_fu_754_p2");
    sc_trace(mVcdFile, trunc_ln21_1_fu_760_p4, "trunc_ln21_1_fu_760_p4");
    sc_trace(mVcdFile, tmp_9_fu_746_p3, "tmp_9_fu_746_p3");
    sc_trace(mVcdFile, sub_ln21_1_fu_770_p2, "sub_ln21_1_fu_770_p2");
    sc_trace(mVcdFile, trunc_ln21_2_fu_776_p4, "trunc_ln21_2_fu_776_p4");
    sc_trace(mVcdFile, zext_ln75_fu_795_p1, "zext_ln75_fu_795_p1");
    sc_trace(mVcdFile, add_ln75_fu_798_p2, "add_ln75_fu_798_p2");
    sc_trace(mVcdFile, zext_ln16_5_fu_820_p1, "zext_ln16_5_fu_820_p1");
    sc_trace(mVcdFile, add_ln16_fu_824_p2, "add_ln16_fu_824_p2");
    sc_trace(mVcdFile, grp_fu_843_p0, "grp_fu_843_p0");
    sc_trace(mVcdFile, grp_fu_843_p1, "grp_fu_843_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_843_p00, "grp_fu_843_p00");
    sc_trace(mVcdFile, grp_fu_843_p10, "grp_fu_843_p10");
#endif

    }
    mHdltvinHandle.open("gauss_blur.hdltvin.dat");
    mHdltvoutHandle.open("gauss_blur.hdltvout.dat");
}

gauss_blur::~gauss_blur() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete window_U;
    delete kernel_U;
    delete part_buffer_0_U;
    delete part_buffer_1_U;
    delete gauss_blur_mac_mudEe_U1;
}

void gauss_blur::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_712_p2.read()) || 
           esl_seteq<1,1,1>(ap_const_lv1_1, or_ln72_2_reg_1007.read())) || 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln67_reg_998.read())))) {
        col_0_reg_313 = col_reg_939.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_446_p2.read()))) {
        col_0_reg_313 = ap_const_lv9_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i1_0_reg_325 = i_1_reg_968.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i1_0_reg_325 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, and_ln67_fu_659_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln72_2_fu_692_p2.read()))) {
        i_0_i_reg_348 = ap_const_lv2_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_808_p2.read()))) {
        i_0_i_reg_348 = i_2_reg_1014.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln39_fu_416_p2.read(), ap_const_lv1_1))) {
        i_0_reg_280 = i_reg_869.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_280 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        j_0_i_reg_371 = j_1_reg_1027.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, and_ln67_reg_998.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_ln72_2_reg_1007.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_712_p2.read()))) {
        j_0_i_reg_371 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_382_p2.read(), ap_const_lv1_0))) {
        j_0_reg_291 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_291 = j_reg_882.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, and_ln67_fu_659_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln72_2_fu_692_p2.read()))) {
        result_0_i_reg_336 = ap_const_lv32_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_808_p2.read()))) {
        result_0_i_reg_336 = result_1_i_reg_359.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        result_1_i_reg_359 = grp_fu_843_p3.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, and_ln67_reg_998.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, or_ln72_2_reg_1007.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_712_p2.read()))) {
        result_1_i_reg_359 = result_0_i_reg_336.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln38_fu_382_p2.read(), ap_const_lv1_1))) {
        row_0_reg_302 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(icmp_ln46_fu_544_p2.read(), ap_const_lv1_1))) {
        row_0_reg_302 = row_reg_900.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        and_ln67_reg_998 = and_ln67_fu_659_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        col_reg_939 = col_fu_550_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_1_reg_968 = i_1_fu_599_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln67_reg_998.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln72_2_reg_1007.read()))) {
        i_2_reg_1014 = i_2_fu_718_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_869 = i_fu_388_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        icmp_ln49_1_reg_949 = icmp_ln49_1_fu_570_p2.read();
        select_ln49_reg_959 = select_ln49_fu_585_p3.read();
        zext_ln50_1_reg_953 = zext_ln50_1_fu_581_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln45_fu_446_p2.read()))) {
        icmp_ln49_reg_905 = icmp_ln49_fu_458_p2.read();
        icmp_ln67_reg_915 = icmp_ln67_fu_494_p2.read();
        icmp_ln72_1_reg_925 = icmp_ln72_1_fu_512_p2.read();
        icmp_ln72_reg_920 = icmp_ln72_fu_506_p2.read();
        sub_ln50_reg_910 = sub_ln50_fu_488_p2.read();
        sub_ln73_reg_930 = sub_ln73_fu_538_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        j_1_reg_1027 = j_1_fu_814_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_882 = j_fu_422_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln67_fu_659_p2.read()))) {
        or_ln72_2_reg_1007 = or_ln72_2_fu_692_p2.read();
        outcol_reg_1002 = outcol_fu_664_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(icmp_ln54_fu_593_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(icmp_ln49_1_reg_949.read(), ap_const_lv1_1))) {
        part_buffer_0_addr_reg_988 =  (sc_lv<9>) (zext_ln50_1_reg_953.read());
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        row_reg_900 = row_fu_452_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln39_fu_416_p2.read()))) {
        sext_ln40_reg_887 = sext_ln40_fu_437_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln67_reg_998.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln72_2_reg_1007.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_712_p2.read()))) {
        sub_ln16_reg_1019 = sub_ln16_fu_740_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln38_fu_382_p2.read(), ap_const_lv1_0))) {
        sub_ln40_reg_874 = sub_ln40_fu_410_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln54_fu_593_p2.read()))) {
        sub_ln55_reg_973 = sub_ln55_fu_621_p2.read();
        window_addr_3_reg_978 =  (sc_lv<4>) (sext_ln55_1_fu_633_p1.read());
    }
}

void gauss_blur::thread_add_ln16_fu_824_p2() {
    add_ln16_fu_824_p2 = (!sub_ln16_reg_1019.read().is_01() || !zext_ln16_5_fu_820_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln16_reg_1019.read()) + sc_biguint<5>(zext_ln16_5_fu_820_p1.read()));
}

void gauss_blur::thread_add_ln40_fu_432_p2() {
    add_ln40_fu_432_p2 = (!sub_ln40_reg_874.read().is_01() || !zext_ln40_2_fu_428_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln40_reg_874.read()) + sc_biguint<5>(zext_ln40_2_fu_428_p1.read()));
}

void gauss_blur::thread_add_ln50_fu_560_p2() {
    add_ln50_fu_560_p2 = (!sub_ln50_reg_910.read().is_01() || !zext_ln50_3_fu_556_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(sub_ln50_reg_910.read()) + sc_biguint<20>(zext_ln50_3_fu_556_p1.read()));
}

void gauss_blur::thread_add_ln55_fu_627_p2() {
    add_ln55_fu_627_p2 = (!sub_ln55_fu_621_p2.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_bigint<5>(sub_ln55_fu_621_p2.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void gauss_blur::thread_add_ln56_fu_638_p2() {
    add_ln56_fu_638_p2 = (!sub_ln55_fu_621_p2.read().is_01() || !ap_const_lv5_2.is_01())? sc_lv<5>(): (sc_bigint<5>(sub_ln55_fu_621_p2.read()) + sc_biguint<5>(ap_const_lv5_2));
}

void gauss_blur::thread_add_ln73_fu_702_p2() {
    add_ln73_fu_702_p2 = (!sub_ln73_reg_930.read().is_01() || !zext_ln73_fu_698_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(sub_ln73_reg_930.read()) + sc_biguint<20>(zext_ln73_fu_698_p1.read()));
}

void gauss_blur::thread_add_ln75_fu_798_p2() {
    add_ln75_fu_798_p2 = (!sub_ln73_reg_930.read().is_01() || !zext_ln75_fu_795_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(sub_ln73_reg_930.read()) + sc_biguint<20>(zext_ln75_fu_795_p1.read()));
}

void gauss_blur::thread_and_ln49_fu_576_p2() {
    and_ln49_fu_576_p2 = (icmp_ln49_reg_905.read() & icmp_ln49_1_fu_570_p2.read());
}

void gauss_blur::thread_and_ln67_fu_659_p2() {
    and_ln67_fu_659_p2 = (icmp_ln67_reg_915.read() & icmp_ln67_1_fu_653_p2.read());
}

void gauss_blur::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void gauss_blur::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void gauss_blur::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void gauss_blur::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void gauss_blur::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void gauss_blur::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void gauss_blur::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void gauss_blur::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void gauss_blur::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void gauss_blur::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void gauss_blur::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void gauss_blur::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void gauss_blur::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void gauss_blur::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln45_fu_446_p2.read(), ap_const_lv1_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void gauss_blur::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gauss_blur::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln45_fu_446_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void gauss_blur::thread_col_fu_550_p2() {
    col_fu_550_p2 = (!col_0_reg_313.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(col_0_reg_313.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void gauss_blur::thread_gauss_kernel_address0() {
    gauss_kernel_address0 =  (sc_lv<4>) (sext_ln40_fu_437_p1.read());
}

void gauss_blur::thread_gauss_kernel_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        gauss_kernel_ce0 = ap_const_logic_1;
    } else {
        gauss_kernel_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_grp_fu_843_p0() {
    grp_fu_843_p0 =  (sc_lv<8>) (grp_fu_843_p00.read());
}

void gauss_blur::thread_grp_fu_843_p00() {
    grp_fu_843_p00 = esl_zext<16,8>(kernel_q0.read());
}

void gauss_blur::thread_grp_fu_843_p1() {
    grp_fu_843_p1 =  (sc_lv<8>) (grp_fu_843_p10.read());
}

void gauss_blur::thread_grp_fu_843_p10() {
    grp_fu_843_p10 = esl_zext<16,8>(window_q1.read());
}

void gauss_blur::thread_i_1_fu_599_p2() {
    i_1_fu_599_p2 = (!i1_0_reg_325.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_0_reg_325.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void gauss_blur::thread_i_2_fu_718_p2() {
    i_2_fu_718_p2 = (!i_0_i_reg_348.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_0_i_reg_348.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void gauss_blur::thread_i_fu_388_p2() {
    i_fu_388_p2 = (!i_0_reg_280.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_0_reg_280.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void gauss_blur::thread_icmp_ln14_fu_712_p2() {
    icmp_ln14_fu_712_p2 = (!i_0_i_reg_348.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_348.read() == ap_const_lv2_3);
}

void gauss_blur::thread_icmp_ln15_fu_808_p2() {
    icmp_ln15_fu_808_p2 = (!j_0_i_reg_371.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_0_i_reg_371.read() == ap_const_lv2_3);
}

void gauss_blur::thread_icmp_ln38_fu_382_p2() {
    icmp_ln38_fu_382_p2 = (!i_0_reg_280.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_280.read() == ap_const_lv2_3);
}

void gauss_blur::thread_icmp_ln39_fu_416_p2() {
    icmp_ln39_fu_416_p2 = (!j_0_reg_291.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_291.read() == ap_const_lv2_3);
}

void gauss_blur::thread_icmp_ln45_fu_446_p2() {
    icmp_ln45_fu_446_p2 = (!row_0_reg_302.read().is_01() || !ap_const_lv10_281.is_01())? sc_lv<1>(): sc_lv<1>(row_0_reg_302.read() == ap_const_lv10_281);
}

void gauss_blur::thread_icmp_ln46_fu_544_p2() {
    icmp_ln46_fu_544_p2 = (!col_0_reg_313.read().is_01() || !ap_const_lv9_1E1.is_01())? sc_lv<1>(): sc_lv<1>(col_0_reg_313.read() == ap_const_lv9_1E1);
}

void gauss_blur::thread_icmp_ln49_1_fu_570_p2() {
    icmp_ln49_1_fu_570_p2 = (!col_0_reg_313.read().is_01() || !ap_const_lv9_1E0.is_01())? sc_lv<1>(): (sc_biguint<9>(col_0_reg_313.read()) < sc_biguint<9>(ap_const_lv9_1E0));
}

void gauss_blur::thread_icmp_ln49_fu_458_p2() {
    icmp_ln49_fu_458_p2 = (!row_0_reg_302.read().is_01() || !ap_const_lv10_280.is_01())? sc_lv<1>(): (sc_biguint<10>(row_0_reg_302.read()) < sc_biguint<10>(ap_const_lv10_280));
}

void gauss_blur::thread_icmp_ln54_fu_593_p2() {
    icmp_ln54_fu_593_p2 = (!i1_0_reg_325.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_325.read() == ap_const_lv2_3);
}

void gauss_blur::thread_icmp_ln67_1_fu_653_p2() {
    icmp_ln67_1_fu_653_p2 = (!col_0_reg_313.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(col_0_reg_313.read() != ap_const_lv9_0);
}

void gauss_blur::thread_icmp_ln67_fu_494_p2() {
    icmp_ln67_fu_494_p2 = (!row_0_reg_302.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(row_0_reg_302.read() != ap_const_lv10_0);
}

void gauss_blur::thread_icmp_ln72_1_fu_512_p2() {
    icmp_ln72_1_fu_512_p2 = (!outrow_fu_500_p2.read().is_01() || !ap_const_lv11_27F.is_01())? sc_lv<1>(): sc_lv<1>(outrow_fu_500_p2.read() == ap_const_lv11_27F);
}

void gauss_blur::thread_icmp_ln72_2_fu_670_p2() {
    icmp_ln72_2_fu_670_p2 = (!outcol_fu_664_p2.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(outcol_fu_664_p2.read() == ap_const_lv9_0);
}

void gauss_blur::thread_icmp_ln72_3_fu_676_p2() {
    icmp_ln72_3_fu_676_p2 = (!outcol_fu_664_p2.read().is_01() || !ap_const_lv9_1DF.is_01())? sc_lv<1>(): sc_lv<1>(outcol_fu_664_p2.read() == ap_const_lv9_1DF);
}

void gauss_blur::thread_icmp_ln72_fu_506_p2() {
    icmp_ln72_fu_506_p2 = (!outrow_fu_500_p2.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(outrow_fu_500_p2.read() == ap_const_lv11_0);
}

void gauss_blur::thread_inImage_address0() {
    inImage_address0 =  (sc_lv<19>) (sext_ln50_fu_565_p1.read());
}

void gauss_blur::thread_inImage_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        inImage_ce0 = ap_const_logic_1;
    } else {
        inImage_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_j_1_fu_814_p2() {
    j_1_fu_814_p2 = (!j_0_i_reg_371.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_0_i_reg_371.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void gauss_blur::thread_j_fu_422_p2() {
    j_fu_422_p2 = (!j_0_reg_291.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_0_reg_291.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void gauss_blur::thread_kernel_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        kernel_address0 =  (sc_lv<4>) (sext_ln16_fu_829_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        kernel_address0 =  (sc_lv<4>) (sext_ln40_reg_887.read());
    } else {
        kernel_address0 = "XXXX";
    }
}

void gauss_blur::thread_kernel_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        kernel_ce0 = ap_const_logic_1;
    } else {
        kernel_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_kernel_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        kernel_we0 = ap_const_logic_1;
    } else {
        kernel_we0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_or_ln72_1_fu_687_p2() {
    or_ln72_1_fu_687_p2 = (icmp_ln72_1_reg_925.read() | icmp_ln72_3_fu_676_p2.read());
}

void gauss_blur::thread_or_ln72_2_fu_692_p2() {
    or_ln72_2_fu_692_p2 = (or_ln72_1_fu_687_p2.read() | or_ln72_fu_682_p2.read());
}

void gauss_blur::thread_or_ln72_fu_682_p2() {
    or_ln72_fu_682_p2 = (icmp_ln72_reg_920.read() | icmp_ln72_2_fu_670_p2.read());
}

void gauss_blur::thread_outImage_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        outImage_address0 =  (sc_lv<19>) (sext_ln75_fu_803_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        outImage_address0 =  (sc_lv<19>) (sext_ln73_1_fu_707_p1.read());
    } else {
        outImage_address0 =  (sc_lv<19>) ("XXXXXXXXXXXXXXXXXXX");
    }
}

void gauss_blur::thread_outImage_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()))) {
        outImage_ce0 = ap_const_logic_1;
    } else {
        outImage_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_outImage_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        outImage_d0 = select_ln21_fu_786_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        outImage_d0 = ap_const_lv8_0;
    } else {
        outImage_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void gauss_blur::thread_outImage_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln67_fu_659_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_ln72_2_fu_692_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln67_reg_998.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln72_2_reg_1007.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_712_p2.read())))) {
        outImage_we0 = ap_const_logic_1;
    } else {
        outImage_we0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_outcol_fu_664_p2() {
    outcol_fu_664_p2 = (!col_0_reg_313.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(col_0_reg_313.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void gauss_blur::thread_outrow_fu_500_p2() {
    outrow_fu_500_p2 = (!zext_ln45_fu_442_p1.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln45_fu_442_p1.read()) + sc_bigint<11>(ap_const_lv11_7FF));
}

void gauss_blur::thread_part_buffer_0_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        part_buffer_0_address0 = part_buffer_0_addr_reg_988.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        part_buffer_0_address0 =  (sc_lv<9>) (zext_ln50_1_reg_953.read());
    } else {
        part_buffer_0_address0 =  (sc_lv<9>) ("XXXXXXXXX");
    }
}

void gauss_blur::thread_part_buffer_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        part_buffer_0_ce0 = ap_const_logic_1;
    } else {
        part_buffer_0_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_part_buffer_0_we0() {
    if ((esl_seteq<1,1,1>(icmp_ln49_1_reg_949.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        part_buffer_0_we0 = ap_const_logic_1;
    } else {
        part_buffer_0_we0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_part_buffer_1_address0() {
    part_buffer_1_address0 =  (sc_lv<9>) (zext_ln50_1_reg_953.read());
}

void gauss_blur::thread_part_buffer_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln54_fu_593_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(icmp_ln49_1_reg_949.read(), ap_const_lv1_1))) {
        part_buffer_1_ce0 = ap_const_logic_1;
    } else {
        part_buffer_1_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_part_buffer_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(icmp_ln54_fu_593_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(icmp_ln49_1_reg_949.read(), ap_const_lv1_1))) {
        part_buffer_1_we0 = ap_const_logic_1;
    } else {
        part_buffer_1_we0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_row_fu_452_p2() {
    row_fu_452_p2 = (!row_0_reg_302.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(row_0_reg_302.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void gauss_blur::thread_select_ln21_fu_786_p3() {
    select_ln21_fu_786_p3 = (!tmp_9_fu_746_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_9_fu_746_p3.read()[0].to_bool())? sub_ln21_1_fu_770_p2.read(): trunc_ln21_2_fu_776_p4.read());
}

void gauss_blur::thread_select_ln49_fu_585_p3() {
    select_ln49_fu_585_p3 = (!and_ln49_fu_576_p2.read()[0].is_01())? sc_lv<8>(): ((and_ln49_fu_576_p2.read()[0].to_bool())? inImage_q0.read(): ap_const_lv8_0);
}

void gauss_blur::thread_sext_ln16_fu_829_p1() {
    sext_ln16_fu_829_p1 = esl_sext<64,5>(add_ln16_fu_824_p2.read());
}

void gauss_blur::thread_sext_ln40_fu_437_p1() {
    sext_ln40_fu_437_p1 = esl_sext<64,5>(add_ln40_fu_432_p2.read());
}

void gauss_blur::thread_sext_ln50_fu_565_p1() {
    sext_ln50_fu_565_p1 = esl_sext<64,20>(add_ln50_fu_560_p2.read());
}

void gauss_blur::thread_sext_ln55_1_fu_633_p1() {
    sext_ln55_1_fu_633_p1 = esl_sext<64,5>(add_ln55_fu_627_p2.read());
}

void gauss_blur::thread_sext_ln55_fu_649_p1() {
    sext_ln55_fu_649_p1 = esl_sext<64,5>(sub_ln55_reg_973.read());
}

void gauss_blur::thread_sext_ln56_fu_644_p1() {
    sext_ln56_fu_644_p1 = esl_sext<64,5>(add_ln56_fu_638_p2.read());
}

void gauss_blur::thread_sext_ln73_1_fu_707_p1() {
    sext_ln73_1_fu_707_p1 = esl_sext<64,20>(add_ln73_fu_702_p2.read());
}

void gauss_blur::thread_sext_ln73_fu_534_p1() {
    sext_ln73_fu_534_p1 = esl_sext<20,16>(tmp_6_fu_526_p3.read());
}

void gauss_blur::thread_sext_ln75_fu_803_p1() {
    sext_ln75_fu_803_p1 = esl_sext<64,20>(add_ln75_fu_798_p2.read());
}

void gauss_blur::thread_sub_ln16_fu_740_p2() {
    sub_ln16_fu_740_p2 = (!zext_ln16_1_fu_736_p1.read().is_01() || !zext_ln16_fu_724_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln16_1_fu_736_p1.read()) - sc_biguint<5>(zext_ln16_fu_724_p1.read()));
}

void gauss_blur::thread_sub_ln21_1_fu_770_p2() {
    sub_ln21_1_fu_770_p2 = (!ap_const_lv8_0.is_01() || !trunc_ln21_1_fu_760_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_0) - sc_biguint<8>(trunc_ln21_1_fu_760_p4.read()));
}

void gauss_blur::thread_sub_ln21_fu_754_p2() {
    sub_ln21_fu_754_p2 = (!ap_const_lv32_0.is_01() || !result_0_i_reg_336.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_0) - sc_biguint<32>(result_0_i_reg_336.read()));
}

void gauss_blur::thread_sub_ln40_fu_410_p2() {
    sub_ln40_fu_410_p2 = (!zext_ln40_1_fu_406_p1.read().is_01() || !zext_ln40_fu_394_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln40_1_fu_406_p1.read()) - sc_biguint<5>(zext_ln40_fu_394_p1.read()));
}

void gauss_blur::thread_sub_ln50_fu_488_p2() {
    sub_ln50_fu_488_p2 = (!zext_ln50_fu_472_p1.read().is_01() || !zext_ln50_2_fu_484_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(zext_ln50_fu_472_p1.read()) - sc_biguint<20>(zext_ln50_2_fu_484_p1.read()));
}

void gauss_blur::thread_sub_ln55_fu_621_p2() {
    sub_ln55_fu_621_p2 = (!zext_ln55_1_fu_617_p1.read().is_01() || !zext_ln55_fu_605_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln55_1_fu_617_p1.read()) - sc_biguint<5>(zext_ln55_fu_605_p1.read()));
}

void gauss_blur::thread_sub_ln73_fu_538_p2() {
    sub_ln73_fu_538_p2 = (!tmp_5_fu_518_p3.read().is_01() || !sext_ln73_fu_534_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(tmp_5_fu_518_p3.read()) - sc_bigint<20>(sext_ln73_fu_534_p1.read()));
}

void gauss_blur::thread_tmp_2_fu_398_p3() {
    tmp_2_fu_398_p3 = esl_concat<2,2>(i_0_reg_280.read(), ap_const_lv2_0);
}

void gauss_blur::thread_tmp_3_fu_464_p3() {
    tmp_3_fu_464_p3 = esl_concat<10,9>(row_0_reg_302.read(), ap_const_lv9_0);
}

void gauss_blur::thread_tmp_4_fu_476_p3() {
    tmp_4_fu_476_p3 = esl_concat<10,5>(row_0_reg_302.read(), ap_const_lv5_0);
}

void gauss_blur::thread_tmp_5_fu_518_p3() {
    tmp_5_fu_518_p3 = esl_concat<11,9>(outrow_fu_500_p2.read(), ap_const_lv9_0);
}

void gauss_blur::thread_tmp_6_fu_526_p3() {
    tmp_6_fu_526_p3 = esl_concat<11,5>(outrow_fu_500_p2.read(), ap_const_lv5_0);
}

void gauss_blur::thread_tmp_7_fu_609_p3() {
    tmp_7_fu_609_p3 = esl_concat<2,2>(i1_0_reg_325.read(), ap_const_lv2_0);
}

void gauss_blur::thread_tmp_8_fu_728_p3() {
    tmp_8_fu_728_p3 = esl_concat<2,2>(i_0_i_reg_348.read(), ap_const_lv2_0);
}

void gauss_blur::thread_tmp_9_fu_746_p3() {
    tmp_9_fu_746_p3 = result_0_i_reg_336.read().range(31, 31);
}

void gauss_blur::thread_trunc_ln21_1_fu_760_p4() {
    trunc_ln21_1_fu_760_p4 = sub_ln21_fu_754_p2.read().range(11, 4);
}

void gauss_blur::thread_trunc_ln21_2_fu_776_p4() {
    trunc_ln21_2_fu_776_p4 = result_0_i_reg_336.read().range(11, 4);
}

void gauss_blur::thread_window_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        window_address0 =  (sc_lv<4>) (ap_const_lv64_5);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        window_address0 = window_addr_3_reg_978.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(icmp_ln54_fu_593_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(icmp_ln49_1_reg_949.read(), ap_const_lv1_1))) {
        window_address0 =  (sc_lv<4>) (ap_const_lv64_8);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln54_fu_593_p2.read()))) {
        window_address0 =  (sc_lv<4>) (sext_ln55_1_fu_633_p1.read());
    } else {
        window_address0 = "XXXX";
    }
}

void gauss_blur::thread_window_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        window_address1 =  (sc_lv<4>) (sext_ln16_fu_829_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        window_address1 =  (sc_lv<4>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        window_address1 =  (sc_lv<4>) (sext_ln55_fu_649_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        window_address1 =  (sc_lv<4>) (sext_ln56_fu_644_p1.read());
    } else {
        window_address1 = "XXXX";
    }
}

void gauss_blur::thread_window_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln54_fu_593_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(icmp_ln54_fu_593_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(icmp_ln49_1_reg_949.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        window_ce0 = ap_const_logic_1;
    } else {
        window_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_window_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        window_ce1 = ap_const_logic_1;
    } else {
        window_ce1 = ap_const_logic_0;
    }
}

void gauss_blur::thread_window_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        window_d0 = part_buffer_1_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        window_d0 = window_q1.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(icmp_ln54_fu_593_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(icmp_ln49_1_reg_949.read(), ap_const_lv1_1))) {
        window_d0 = select_ln49_reg_959.read();
    } else {
        window_d0 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void gauss_blur::thread_window_d1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        window_d1 = part_buffer_0_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        window_d1 = window_q0.read();
    } else {
        window_d1 =  (sc_lv<8>) ("XXXXXXXX");
    }
}

void gauss_blur::thread_window_we0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(icmp_ln54_fu_593_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(icmp_ln49_1_reg_949.read(), ap_const_lv1_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(icmp_ln49_1_reg_949.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())))) {
        window_we0 = ap_const_logic_1;
    } else {
        window_we0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_window_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(icmp_ln49_1_reg_949.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())))) {
        window_we1 = ap_const_logic_1;
    } else {
        window_we1 = ap_const_logic_0;
    }
}

void gauss_blur::thread_zext_ln16_1_fu_736_p1() {
    zext_ln16_1_fu_736_p1 = esl_zext<5,4>(tmp_8_fu_728_p3.read());
}

void gauss_blur::thread_zext_ln16_5_fu_820_p1() {
    zext_ln16_5_fu_820_p1 = esl_zext<5,2>(j_0_i_reg_371.read());
}

void gauss_blur::thread_zext_ln16_fu_724_p1() {
    zext_ln16_fu_724_p1 = esl_zext<5,2>(i_0_i_reg_348.read());
}

void gauss_blur::thread_zext_ln40_1_fu_406_p1() {
    zext_ln40_1_fu_406_p1 = esl_zext<5,4>(tmp_2_fu_398_p3.read());
}

void gauss_blur::thread_zext_ln40_2_fu_428_p1() {
    zext_ln40_2_fu_428_p1 = esl_zext<5,2>(j_0_reg_291.read());
}

void gauss_blur::thread_zext_ln40_fu_394_p1() {
    zext_ln40_fu_394_p1 = esl_zext<5,2>(i_0_reg_280.read());
}

void gauss_blur::thread_zext_ln45_fu_442_p1() {
    zext_ln45_fu_442_p1 = esl_zext<11,10>(row_0_reg_302.read());
}

void gauss_blur::thread_zext_ln50_1_fu_581_p1() {
    zext_ln50_1_fu_581_p1 = esl_zext<64,9>(col_0_reg_313.read());
}

void gauss_blur::thread_zext_ln50_2_fu_484_p1() {
    zext_ln50_2_fu_484_p1 = esl_zext<20,15>(tmp_4_fu_476_p3.read());
}

void gauss_blur::thread_zext_ln50_3_fu_556_p1() {
    zext_ln50_3_fu_556_p1 = esl_zext<20,9>(col_0_reg_313.read());
}

void gauss_blur::thread_zext_ln50_fu_472_p1() {
    zext_ln50_fu_472_p1 = esl_zext<20,19>(tmp_3_fu_464_p3.read());
}

void gauss_blur::thread_zext_ln55_1_fu_617_p1() {
    zext_ln55_1_fu_617_p1 = esl_zext<5,4>(tmp_7_fu_609_p3.read());
}

void gauss_blur::thread_zext_ln55_fu_605_p1() {
    zext_ln55_fu_605_p1 = esl_zext<5,2>(i1_0_reg_325.read());
}

void gauss_blur::thread_zext_ln73_fu_698_p1() {
    zext_ln73_fu_698_p1 = esl_zext<20,9>(outcol_fu_664_p2.read());
}

void gauss_blur::thread_zext_ln75_fu_795_p1() {
    zext_ln75_fu_795_p1 = esl_zext<20,9>(outcol_reg_1002.read());
}

void gauss_blur::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln38_fu_382_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln39_fu_416_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln45_fu_446_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln46_fu_544_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(icmp_ln54_fu_593_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_712_p2.read()) || 
   esl_seteq<1,1,1>(ap_const_lv1_1, or_ln72_2_reg_1007.read())) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, and_ln67_reg_998.read())))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln15_fu_808_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<13>) ("XXXXXXXXXXXXX");
            break;
    }
}

void gauss_blur::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inImage_address0\" :  \"" << inImage_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inImage_ce0\" :  \"" << inImage_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inImage_q0\" :  \"" << inImage_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gauss_kernel_address0\" :  \"" << gauss_kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gauss_kernel_ce0\" :  \"" << gauss_kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"gauss_kernel_q0\" :  \"" << gauss_kernel_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outImage_address0\" :  \"" << outImage_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outImage_ce0\" :  \"" << outImage_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outImage_we0\" :  \"" << outImage_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outImage_d0\" :  \"" << outImage_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

