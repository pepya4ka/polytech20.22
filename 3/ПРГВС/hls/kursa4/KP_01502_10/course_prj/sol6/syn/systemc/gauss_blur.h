// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _gauss_blur_HH_
#define _gauss_blur_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "gauss_blur_mux_32dEe.h"
#include "gauss_blur_mux_94eOg.h"
#include "gauss_blur_mac_mufYi.h"
#include "gauss_blur_part_bbkb.h"

namespace ap_rtl {

struct gauss_blur : public sc_module {
    // Port declarations 15
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > inImage_dout;
    sc_in< sc_logic > inImage_empty_n;
    sc_out< sc_logic > inImage_read;
    sc_out< sc_lv<4> > gauss_kernel_address0;
    sc_out< sc_logic > gauss_kernel_ce0;
    sc_in< sc_lv<8> > gauss_kernel_q0;
    sc_out< sc_lv<8> > outImage_din;
    sc_in< sc_logic > outImage_full_n;
    sc_out< sc_logic > outImage_write;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    gauss_blur(sc_module_name name);
    SC_HAS_PROCESS(gauss_blur);

    ~gauss_blur();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    gauss_blur_part_bbkb* part_buffer_0_U;
    gauss_blur_part_bbkb* part_buffer_1_U;
    gauss_blur_mux_32dEe<1,1,8,8,8,2,8>* gauss_blur_mux_32dEe_U1;
    gauss_blur_mux_32dEe<1,1,8,8,8,2,8>* gauss_blur_mux_32dEe_U2;
    gauss_blur_mux_94eOg<1,1,8,8,8,8,8,8,8,8,8,4,8>* gauss_blur_mux_94eOg_U3;
    gauss_blur_mux_94eOg<1,1,8,8,8,8,8,8,8,8,8,4,8>* gauss_blur_mux_94eOg_U4;
    gauss_blur_mac_mufYi<1,3,8,8,32,32>* gauss_blur_mac_mufYi_U5;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > inImage_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln47_fu_518_p2;
    sc_signal< sc_lv<1> > and_ln50_fu_536_p2;
    sc_signal< sc_logic > outImage_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<1> > and_ln68_fu_634_p2;
    sc_signal< sc_lv<1> > or_ln73_2_fu_667_p2;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<1> > and_ln68_reg_1072;
    sc_signal< sc_lv<1> > or_ln73_2_reg_1076;
    sc_signal< sc_lv<2> > i_fu_373_p2;
    sc_signal< sc_lv<2> > i_reg_929;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > sub_ln40_fu_395_p2;
    sc_signal< sc_lv<5> > sub_ln40_reg_934;
    sc_signal< sc_lv<1> > icmp_ln38_fu_367_p2;
    sc_signal< sc_lv<2> > j_fu_407_p2;
    sc_signal< sc_lv<2> > j_reg_996;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln39_fu_401_p2;
    sc_signal< sc_lv<10> > row_fu_482_p2;
    sc_signal< sc_lv<10> > row_reg_1009;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln50_fu_488_p2;
    sc_signal< sc_lv<1> > icmp_ln50_reg_1014;
    sc_signal< sc_lv<1> > icmp_ln46_fu_476_p2;
    sc_signal< sc_lv<1> > icmp_ln68_fu_494_p2;
    sc_signal< sc_lv<1> > icmp_ln68_reg_1019;
    sc_signal< sc_lv<1> > icmp_ln73_fu_506_p2;
    sc_signal< sc_lv<1> > icmp_ln73_reg_1024;
    sc_signal< sc_lv<1> > icmp_ln73_1_fu_512_p2;
    sc_signal< sc_lv<1> > icmp_ln73_1_reg_1029;
    sc_signal< sc_lv<9> > col_fu_524_p2;
    sc_signal< sc_lv<9> > col_reg_1037;
    sc_signal< bool > ap_predicate_op114_read_state7;
    sc_signal< bool > ap_block_state7;
    sc_signal< sc_lv<1> > icmp_ln50_1_fu_530_p2;
    sc_signal< sc_lv<1> > icmp_ln50_1_reg_1042;
    sc_signal< sc_lv<2> > i_1_fu_547_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<9> > part_buffer_0_addr_reg_1057;
    sc_signal< sc_lv<1> > icmp_ln55_fu_541_p2;
    sc_signal< sc_lv<8> > part_buffer_1_q0;
    sc_signal< sc_lv<8> > window_1_2_reg_1067;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< bool > ap_predicate_op169_write_state10;
    sc_signal< bool > ap_block_state10;
    sc_signal< sc_lv<2> > i_2_fu_679_p2;
    sc_signal< sc_lv<2> > i_2_reg_1083;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<4> > sub_ln16_fu_697_p2;
    sc_signal< sc_lv<4> > sub_ln16_reg_1088;
    sc_signal< sc_lv<1> > icmp_ln14_fu_673_p2;
    sc_signal< sc_lv<8> > sub_ln21_1_fu_719_p2;
    sc_signal< sc_lv<8> > sub_ln21_1_reg_1093;
    sc_signal< sc_lv<2> > j_1_fu_731_p2;
    sc_signal< sc_lv<2> > j_1_reg_1101;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > icmp_ln15_fu_725_p2;
    sc_signal< sc_lv<32> > grp_fu_864_p3;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_logic > part_buffer_0_ce0;
    sc_signal< sc_logic > part_buffer_0_we0;
    sc_signal< sc_lv<8> > part_buffer_0_q0;
    sc_signal< sc_lv<9> > part_buffer_1_address0;
    sc_signal< sc_logic > part_buffer_1_ce0;
    sc_signal< sc_logic > part_buffer_1_we0;
    sc_signal< sc_lv<2> > i_0_reg_232;
    sc_signal< sc_lv<2> > j_0_reg_244;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<10> > row_0_reg_256;
    sc_signal< sc_lv<9> > col_0_reg_267;
    sc_signal< bool > ap_predicate_op228_write_state15;
    sc_signal< bool > ap_block_state15;
    sc_signal< sc_lv<8> > window_2_2_reg_279;
    sc_signal< sc_lv<2> > ap_phi_mux_i1_0_phi_fu_296_p4;
    sc_signal< sc_lv<2> > i1_0_reg_292;
    sc_signal< sc_lv<32> > result_0_i_reg_303;
    sc_signal< sc_lv<2> > i_0_i_reg_315;
    sc_signal< sc_lv<32> > result_1_i_reg_326;
    sc_signal< sc_lv<2> > j_0_i_reg_338;
    sc_signal< sc_lv<64> > sext_ln40_fu_422_p1;
    sc_signal< sc_lv<64> > zext_ln62_fu_607_p1;
    sc_signal< sc_lv<8> > kernel_2_2_fu_102;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > kernel_2_2_1_fu_106;
    sc_signal< sc_lv<8> > kernel_2_2_2_fu_110;
    sc_signal< sc_lv<8> > kernel_2_2_3_fu_114;
    sc_signal< sc_lv<8> > kernel_2_2_4_fu_118;
    sc_signal< sc_lv<8> > kernel_2_2_5_fu_122;
    sc_signal< sc_lv<8> > kernel_2_2_6_fu_126;
    sc_signal< sc_lv<8> > kernel_2_2_7_fu_130;
    sc_signal< sc_lv<8> > kernel_2_2_8_fu_134;
    sc_signal< sc_lv<8> > window_2_0_fu_146;
    sc_signal< sc_lv<8> > window_0_0_fu_553_p5;
    sc_signal< sc_lv<8> > window_2_1_fu_150;
    sc_signal< sc_lv<8> > window_0_1_fu_565_p5;
    sc_signal< sc_lv<8> > window_0_2_1_fu_154;
    sc_signal< sc_lv<8> > window_2_0_1_fu_158;
    sc_signal< sc_lv<8> > window_2_1_1_fu_162;
    sc_signal< sc_lv<8> > window_1_2_1_fu_166;
    sc_signal< sc_lv<8> > window_2_0_2_fu_170;
    sc_signal< sc_lv<8> > window_2_1_2_fu_174;
    sc_signal< sc_lv<8> > window_2_2_1_fu_178;
    sc_signal< sc_lv<8> > select_ln21_fu_856_p3;
    sc_signal< sc_lv<4> > tmp_4_fu_383_p3;
    sc_signal< sc_lv<5> > zext_ln40_1_fu_391_p1;
    sc_signal< sc_lv<5> > zext_ln40_fu_379_p1;
    sc_signal< sc_lv<5> > zext_ln40_2_fu_413_p1;
    sc_signal< sc_lv<5> > add_ln40_fu_417_p2;
    sc_signal< sc_lv<11> > zext_ln46_fu_472_p1;
    sc_signal< sc_lv<11> > outrow_fu_500_p2;
    sc_signal< sc_lv<1> > icmp_ln68_1_fu_628_p2;
    sc_signal< sc_lv<9> > outcol_fu_639_p2;
    sc_signal< sc_lv<1> > icmp_ln73_2_fu_645_p2;
    sc_signal< sc_lv<1> > icmp_ln73_3_fu_651_p2;
    sc_signal< sc_lv<1> > or_ln73_1_fu_662_p2;
    sc_signal< sc_lv<1> > or_ln73_fu_657_p2;
    sc_signal< sc_lv<4> > shl_ln_fu_689_p3;
    sc_signal< sc_lv<4> > zext_ln16_fu_685_p1;
    sc_signal< sc_lv<32> > sub_ln21_fu_703_p2;
    sc_signal< sc_lv<8> > trunc_ln21_1_fu_709_p4;
    sc_signal< sc_lv<4> > zext_ln16_1_fu_773_p1;
    sc_signal< sc_lv<4> > add_ln16_fu_777_p2;
    sc_signal< sc_lv<8> > tmp_2_fu_782_p11;
    sc_signal< sc_lv<8> > tmp_3_fu_810_p11;
    sc_signal< sc_lv<1> > tmp_5_fu_838_p3;
    sc_signal< sc_lv<8> > trunc_ln21_2_fu_846_p4;
    sc_signal< sc_lv<8> > grp_fu_864_p0;
    sc_signal< sc_lv<8> > grp_fu_864_p1;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    sc_signal< sc_lv<16> > grp_fu_864_p00;
    sc_signal< sc_lv<16> > grp_fu_864_p10;
    sc_signal< bool > ap_condition_140;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<10> ap_const_lv10_281;
    static const sc_lv<10> ap_const_lv10_1;
    static const sc_lv<10> ap_const_lv10_280;
    static const sc_lv<11> ap_const_lv11_7FF;
    static const sc_lv<11> ap_const_lv11_0;
    static const sc_lv<11> ap_const_lv11_27F;
    static const sc_lv<9> ap_const_lv9_1E1;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<9> ap_const_lv9_1E0;
    static const sc_lv<9> ap_const_lv9_1FF;
    static const sc_lv<9> ap_const_lv9_1DF;
    static const sc_lv<32> ap_const_lv32_1F;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln16_fu_777_p2();
    void thread_add_ln40_fu_417_p2();
    void thread_and_ln50_fu_536_p2();
    void thread_and_ln68_fu_634_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state10();
    void thread_ap_block_state15();
    void thread_ap_block_state7();
    void thread_ap_condition_140();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_phi_mux_i1_0_phi_fu_296_p4();
    void thread_ap_predicate_op114_read_state7();
    void thread_ap_predicate_op169_write_state10();
    void thread_ap_predicate_op228_write_state15();
    void thread_ap_ready();
    void thread_col_fu_524_p2();
    void thread_gauss_kernel_address0();
    void thread_gauss_kernel_ce0();
    void thread_grp_fu_864_p0();
    void thread_grp_fu_864_p00();
    void thread_grp_fu_864_p1();
    void thread_grp_fu_864_p10();
    void thread_i_1_fu_547_p2();
    void thread_i_2_fu_679_p2();
    void thread_i_fu_373_p2();
    void thread_icmp_ln14_fu_673_p2();
    void thread_icmp_ln15_fu_725_p2();
    void thread_icmp_ln38_fu_367_p2();
    void thread_icmp_ln39_fu_401_p2();
    void thread_icmp_ln46_fu_476_p2();
    void thread_icmp_ln47_fu_518_p2();
    void thread_icmp_ln50_1_fu_530_p2();
    void thread_icmp_ln50_fu_488_p2();
    void thread_icmp_ln55_fu_541_p2();
    void thread_icmp_ln68_1_fu_628_p2();
    void thread_icmp_ln68_fu_494_p2();
    void thread_icmp_ln73_1_fu_512_p2();
    void thread_icmp_ln73_2_fu_645_p2();
    void thread_icmp_ln73_3_fu_651_p2();
    void thread_icmp_ln73_fu_506_p2();
    void thread_inImage_blk_n();
    void thread_inImage_read();
    void thread_j_1_fu_731_p2();
    void thread_j_fu_407_p2();
    void thread_or_ln73_1_fu_662_p2();
    void thread_or_ln73_2_fu_667_p2();
    void thread_or_ln73_fu_657_p2();
    void thread_outImage_blk_n();
    void thread_outImage_din();
    void thread_outImage_write();
    void thread_outcol_fu_639_p2();
    void thread_outrow_fu_500_p2();
    void thread_part_buffer_0_ce0();
    void thread_part_buffer_0_we0();
    void thread_part_buffer_1_address0();
    void thread_part_buffer_1_ce0();
    void thread_part_buffer_1_we0();
    void thread_row_fu_482_p2();
    void thread_select_ln21_fu_856_p3();
    void thread_sext_ln40_fu_422_p1();
    void thread_shl_ln_fu_689_p3();
    void thread_sub_ln16_fu_697_p2();
    void thread_sub_ln21_1_fu_719_p2();
    void thread_sub_ln21_fu_703_p2();
    void thread_sub_ln40_fu_395_p2();
    void thread_tmp_4_fu_383_p3();
    void thread_tmp_5_fu_838_p3();
    void thread_trunc_ln21_1_fu_709_p4();
    void thread_trunc_ln21_2_fu_846_p4();
    void thread_zext_ln16_1_fu_773_p1();
    void thread_zext_ln16_fu_685_p1();
    void thread_zext_ln40_1_fu_391_p1();
    void thread_zext_ln40_2_fu_413_p1();
    void thread_zext_ln40_fu_379_p1();
    void thread_zext_ln46_fu_472_p1();
    void thread_zext_ln62_fu_607_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
