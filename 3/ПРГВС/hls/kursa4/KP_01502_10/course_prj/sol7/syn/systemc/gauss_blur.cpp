// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "gauss_blur.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic gauss_blur::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic gauss_blur::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<15> gauss_blur::ap_ST_fsm_state1 = "1";
const sc_lv<15> gauss_blur::ap_ST_fsm_state2 = "10";
const sc_lv<15> gauss_blur::ap_ST_fsm_state3 = "100";
const sc_lv<15> gauss_blur::ap_ST_fsm_state4 = "1000";
const sc_lv<15> gauss_blur::ap_ST_fsm_state5 = "10000";
const sc_lv<15> gauss_blur::ap_ST_fsm_state6 = "100000";
const sc_lv<15> gauss_blur::ap_ST_fsm_state7 = "1000000";
const sc_lv<15> gauss_blur::ap_ST_fsm_state8 = "10000000";
const sc_lv<15> gauss_blur::ap_ST_fsm_state9 = "100000000";
const sc_lv<15> gauss_blur::ap_ST_fsm_state10 = "1000000000";
const sc_lv<15> gauss_blur::ap_ST_fsm_state11 = "10000000000";
const sc_lv<15> gauss_blur::ap_ST_fsm_state12 = "100000000000";
const sc_lv<15> gauss_blur::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<15> gauss_blur::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<15> gauss_blur::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<32> gauss_blur::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool gauss_blur::ap_const_boolean_1 = true;
const sc_lv<32> gauss_blur::ap_const_lv32_6 = "110";
const sc_lv<1> gauss_blur::ap_const_lv1_0 = "0";
const sc_lv<1> gauss_blur::ap_const_lv1_1 = "1";
const sc_lv<32> gauss_blur::ap_const_lv32_9 = "1001";
const sc_lv<32> gauss_blur::ap_const_lv32_A = "1010";
const sc_lv<32> gauss_blur::ap_const_lv32_1 = "1";
const sc_lv<32> gauss_blur::ap_const_lv32_2 = "10";
const sc_lv<32> gauss_blur::ap_const_lv32_5 = "101";
const sc_lv<32> gauss_blur::ap_const_lv32_7 = "111";
const sc_lv<32> gauss_blur::ap_const_lv32_8 = "1000";
const sc_lv<32> gauss_blur::ap_const_lv32_B = "1011";
const sc_lv<32> gauss_blur::ap_const_lv32_C = "1100";
const sc_lv<32> gauss_blur::ap_const_lv32_D = "1101";
const sc_lv<32> gauss_blur::ap_const_lv32_E = "1110";
const sc_lv<2> gauss_blur::ap_const_lv2_0 = "00";
const sc_lv<32> gauss_blur::ap_const_lv32_4 = "100";
const sc_lv<10> gauss_blur::ap_const_lv10_0 = "0000000000";
const sc_lv<9> gauss_blur::ap_const_lv9_0 = "000000000";
const sc_lv<8> gauss_blur::ap_const_lv8_0 = "00000000";
const sc_lv<20> gauss_blur::ap_const_lv20_0 = "00000000000000000000";
const sc_lv<32> gauss_blur::ap_const_lv32_3 = "11";
const sc_lv<2> gauss_blur::ap_const_lv2_1 = "1";
const sc_lv<2> gauss_blur::ap_const_lv2_3 = "11";
const sc_lv<10> gauss_blur::ap_const_lv10_281 = "1010000001";
const sc_lv<10> gauss_blur::ap_const_lv10_1 = "1";
const sc_lv<10> gauss_blur::ap_const_lv10_280 = "1010000000";
const sc_lv<11> gauss_blur::ap_const_lv11_7FF = "11111111111";
const sc_lv<11> gauss_blur::ap_const_lv11_0 = "00000000000";
const sc_lv<11> gauss_blur::ap_const_lv11_27F = "1001111111";
const sc_lv<9> gauss_blur::ap_const_lv9_1E1 = "111100001";
const sc_lv<9> gauss_blur::ap_const_lv9_1 = "1";
const sc_lv<9> gauss_blur::ap_const_lv9_1E0 = "111100000";
const sc_lv<9> gauss_blur::ap_const_lv9_1FF = "111111111";
const sc_lv<9> gauss_blur::ap_const_lv9_1DF = "111011111";

gauss_blur::gauss_blur(sc_module_name name) : sc_module(name), mVcdFile(0) {
    part_buffer_0_U = new gauss_blur_part_bbkb("part_buffer_0_U");
    part_buffer_0_U->clk(ap_clk);
    part_buffer_0_U->reset(ap_rst);
    part_buffer_0_U->address0(part_buffer_0_addr_reg_1020);
    part_buffer_0_U->ce0(part_buffer_0_ce0);
    part_buffer_0_U->we0(part_buffer_0_we0);
    part_buffer_0_U->d0(window_1_2_reg_1030);
    part_buffer_0_U->q0(part_buffer_0_q0);
    part_buffer_1_U = new gauss_blur_part_bbkb("part_buffer_1_U");
    part_buffer_1_U->clk(ap_clk);
    part_buffer_1_U->reset(ap_rst);
    part_buffer_1_U->address0(part_buffer_1_address0);
    part_buffer_1_U->ce0(part_buffer_1_ce0);
    part_buffer_1_U->we0(part_buffer_1_we0);
    part_buffer_1_U->d0(window_2_2_reg_273);
    part_buffer_1_U->q0(part_buffer_1_q0);
    gauss_blur_mux_32dEe_U1 = new gauss_blur_mux_32dEe<1,1,8,8,8,2,8>("gauss_blur_mux_32dEe_U1");
    gauss_blur_mux_32dEe_U1->din0(window_2_1_fu_144);
    gauss_blur_mux_32dEe_U1->din1(window_2_1_1_fu_156);
    gauss_blur_mux_32dEe_U1->din2(window_2_1_2_fu_168);
    gauss_blur_mux_32dEe_U1->din3(i1_0_reg_286);
    gauss_blur_mux_32dEe_U1->dout(window_0_0_fu_525_p5);
    gauss_blur_mux_32dEe_U2 = new gauss_blur_mux_32dEe<1,1,8,8,8,2,8>("gauss_blur_mux_32dEe_U2");
    gauss_blur_mux_32dEe_U2->din0(window_0_2_1_fu_148);
    gauss_blur_mux_32dEe_U2->din1(window_1_2_1_fu_160);
    gauss_blur_mux_32dEe_U2->din2(window_2_2_1_fu_172);
    gauss_blur_mux_32dEe_U2->din3(i1_0_reg_286);
    gauss_blur_mux_32dEe_U2->dout(window_0_1_fu_537_p5);
    gauss_blur_mux_32dEe_U3 = new gauss_blur_mux_32dEe<1,1,8,8,8,2,8>("gauss_blur_mux_32dEe_U3");
    gauss_blur_mux_32dEe_U3->din0(window_2_1_fu_144);
    gauss_blur_mux_32dEe_U3->din1(window_2_1_1_fu_156);
    gauss_blur_mux_32dEe_U3->din2(window_2_1_2_fu_168);
    gauss_blur_mux_32dEe_U3->din3(i_0_i_reg_309);
    gauss_blur_mux_32dEe_U3->dout(tmp_4_fu_675_p5);
    gauss_blur_mux_32dEe_U4 = new gauss_blur_mux_32dEe<1,1,8,8,8,2,8>("gauss_blur_mux_32dEe_U4");
    gauss_blur_mux_32dEe_U4->din0(kernel_2_2_1_fu_100);
    gauss_blur_mux_32dEe_U4->din1(kernel_2_2_4_fu_112);
    gauss_blur_mux_32dEe_U4->din2(kernel_2_2_7_fu_124);
    gauss_blur_mux_32dEe_U4->din3(i_0_i_reg_309);
    gauss_blur_mux_32dEe_U4->dout(tmp_5_fu_687_p5);
    gauss_blur_mux_32dEe_U5 = new gauss_blur_mux_32dEe<1,1,8,8,8,2,8>("gauss_blur_mux_32dEe_U5");
    gauss_blur_mux_32dEe_U5->din0(window_0_2_1_fu_148);
    gauss_blur_mux_32dEe_U5->din1(window_1_2_1_fu_160);
    gauss_blur_mux_32dEe_U5->din2(window_2_2_1_fu_172);
    gauss_blur_mux_32dEe_U5->din3(i_0_i_reg_309);
    gauss_blur_mux_32dEe_U5->dout(tmp_6_fu_699_p5);
    gauss_blur_mux_32dEe_U6 = new gauss_blur_mux_32dEe<1,1,8,8,8,2,8>("gauss_blur_mux_32dEe_U6");
    gauss_blur_mux_32dEe_U6->din0(kernel_2_2_2_fu_104);
    gauss_blur_mux_32dEe_U6->din1(kernel_2_2_5_fu_116);
    gauss_blur_mux_32dEe_U6->din2(kernel_2_2_8_fu_128);
    gauss_blur_mux_32dEe_U6->din3(i_0_i_reg_309);
    gauss_blur_mux_32dEe_U6->dout(tmp_7_fu_715_p5);
    gauss_blur_mux_32dEe_U7 = new gauss_blur_mux_32dEe<1,1,8,8,8,2,8>("gauss_blur_mux_32dEe_U7");
    gauss_blur_mux_32dEe_U7->din0(window_2_0_fu_140);
    gauss_blur_mux_32dEe_U7->din1(window_2_0_1_fu_152);
    gauss_blur_mux_32dEe_U7->din2(window_2_0_2_fu_164);
    gauss_blur_mux_32dEe_U7->din3(i_0_i_reg_309);
    gauss_blur_mux_32dEe_U7->dout(tmp_2_fu_760_p5);
    gauss_blur_mux_32dEe_U8 = new gauss_blur_mux_32dEe<1,1,8,8,8,2,8>("gauss_blur_mux_32dEe_U8");
    gauss_blur_mux_32dEe_U8->din0(kernel_2_2_fu_96);
    gauss_blur_mux_32dEe_U8->din1(kernel_2_2_3_fu_108);
    gauss_blur_mux_32dEe_U8->din2(kernel_2_2_6_fu_120);
    gauss_blur_mux_32dEe_U8->din3(i_0_i_reg_309);
    gauss_blur_mux_32dEe_U8->dout(tmp_3_fu_776_p5);
    gauss_blur_mac_mueOg_U9 = new gauss_blur_mac_mueOg<1,3,8,8,16,17>("gauss_blur_mac_mueOg_U9");
    gauss_blur_mac_mueOg_U9->clk(ap_clk);
    gauss_blur_mac_mueOg_U9->reset(ap_rst);
    gauss_blur_mac_mueOg_U9->din0(grp_fu_819_p0);
    gauss_blur_mac_mueOg_U9->din1(grp_fu_819_p1);
    gauss_blur_mac_mueOg_U9->din2(grp_fu_819_p2);
    gauss_blur_mac_mueOg_U9->ce(grp_fu_819_ce);
    gauss_blur_mac_mueOg_U9->dout(grp_fu_819_p3);
    gauss_blur_mac_mufYi_U10 = new gauss_blur_mac_mufYi<1,3,8,8,17,18>("gauss_blur_mac_mufYi_U10");
    gauss_blur_mac_mufYi_U10->clk(ap_clk);
    gauss_blur_mac_mufYi_U10->reset(ap_rst);
    gauss_blur_mac_mufYi_U10->din0(grp_fu_827_p0);
    gauss_blur_mac_mufYi_U10->din1(grp_fu_827_p1);
    gauss_blur_mac_mufYi_U10->din2(grp_fu_827_p2);
    gauss_blur_mac_mufYi_U10->ce(ap_var_for_const0);
    gauss_blur_mac_mufYi_U10->dout(grp_fu_827_p3);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln16_2_fu_813_p2);
    sensitive << ( result_0_i_reg_297 );
    sensitive << ( zext_ln16_10_fu_810_p1 );

    SC_METHOD(thread_add_ln40_fu_389_p2);
    sensitive << ( sub_ln40_reg_897 );
    sensitive << ( zext_ln40_2_fu_385_p1 );

    SC_METHOD(thread_and_ln50_fu_508_p2);
    sensitive << ( icmp_ln50_reg_977 );
    sensitive << ( icmp_ln50_1_fu_502_p2 );

    SC_METHOD(thread_and_ln68_fu_606_p2);
    sensitive << ( icmp_ln68_reg_982 );
    sensitive << ( icmp_ln68_1_fu_600_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state10);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_predicate_op169_write_state10 );

    SC_METHOD(thread_ap_block_state11);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_predicate_op197_write_state11 );

    SC_METHOD(thread_ap_block_state7);
    sensitive << ( inImage_empty_n );
    sensitive << ( ap_predicate_op114_read_state7 );

    SC_METHOD(thread_ap_condition_143);
    sensitive << ( inImage_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln47_fu_490_p2 );
    sensitive << ( ap_predicate_op114_read_state7 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln46_fu_448_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_i1_0_phi_fu_290_p4);
    sensitive << ( i1_0_reg_286 );

    SC_METHOD(thread_ap_predicate_op114_read_state7);
    sensitive << ( icmp_ln47_fu_490_p2 );
    sensitive << ( and_ln50_fu_508_p2 );

    SC_METHOD(thread_ap_predicate_op169_write_state10);
    sensitive << ( and_ln68_fu_606_p2 );
    sensitive << ( or_ln73_2_fu_639_p2 );

    SC_METHOD(thread_ap_predicate_op197_write_state11);
    sensitive << ( and_ln68_reg_1035 );
    sensitive << ( or_ln73_2_reg_1039 );
    sensitive << ( icmp_ln14_fu_645_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln46_fu_448_p2 );

    SC_METHOD(thread_col_fu_496_p2);
    sensitive << ( col_0_reg_261 );

    SC_METHOD(thread_gauss_kernel_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( sext_ln40_fu_394_p1 );

    SC_METHOD(thread_gauss_kernel_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_grp_fu_819_ce);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op197_write_state11 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_grp_fu_819_p0);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_fu_819_p00 );

    SC_METHOD(thread_grp_fu_819_p00);
    sensitive << ( tmp_6_fu_699_p5 );

    SC_METHOD(thread_grp_fu_819_p1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_fu_819_p10 );

    SC_METHOD(thread_grp_fu_819_p10);
    sensitive << ( tmp_7_fu_715_p5 );

    SC_METHOD(thread_grp_fu_819_p2);
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( grp_fu_819_p20 );

    SC_METHOD(thread_grp_fu_819_p20);
    sensitive << ( mul_ln16_1_reg_1081 );

    SC_METHOD(thread_grp_fu_827_p0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_827_p00 );

    SC_METHOD(thread_grp_fu_827_p00);
    sensitive << ( tmp_2_fu_760_p5 );

    SC_METHOD(thread_grp_fu_827_p1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_fu_827_p10 );

    SC_METHOD(thread_grp_fu_827_p10);
    sensitive << ( tmp_3_fu_776_p5 );

    SC_METHOD(thread_grp_fu_827_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_fu_827_p20 );

    SC_METHOD(thread_grp_fu_827_p20);
    sensitive << ( add_ln16_reg_1086 );

    SC_METHOD(thread_i_1_fu_519_p2);
    sensitive << ( i1_0_reg_286 );

    SC_METHOD(thread_i_2_fu_651_p2);
    sensitive << ( i_0_i_reg_309 );

    SC_METHOD(thread_i_fu_345_p2);
    sensitive << ( i_0_reg_226 );

    SC_METHOD(thread_icmp_ln14_fu_645_p2);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( and_ln68_reg_1035 );
    sensitive << ( or_ln73_2_reg_1039 );
    sensitive << ( ap_predicate_op197_write_state11 );
    sensitive << ( i_0_i_reg_309 );

    SC_METHOD(thread_icmp_ln38_fu_339_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_226 );

    SC_METHOD(thread_icmp_ln39_fu_373_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_238 );

    SC_METHOD(thread_icmp_ln46_fu_448_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( row_0_reg_250 );

    SC_METHOD(thread_icmp_ln47_fu_490_p2);
    sensitive << ( inImage_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_predicate_op114_read_state7 );
    sensitive << ( col_0_reg_261 );

    SC_METHOD(thread_icmp_ln50_1_fu_502_p2);
    sensitive << ( inImage_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln47_fu_490_p2 );
    sensitive << ( ap_predicate_op114_read_state7 );
    sensitive << ( col_0_reg_261 );

    SC_METHOD(thread_icmp_ln50_fu_460_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln46_fu_448_p2 );
    sensitive << ( row_0_reg_250 );

    SC_METHOD(thread_icmp_ln55_fu_513_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( i1_0_reg_286 );

    SC_METHOD(thread_icmp_ln68_1_fu_600_p2);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_predicate_op169_write_state10 );
    sensitive << ( col_0_reg_261 );

    SC_METHOD(thread_icmp_ln68_fu_466_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln46_fu_448_p2 );
    sensitive << ( row_0_reg_250 );

    SC_METHOD(thread_icmp_ln73_1_fu_484_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln46_fu_448_p2 );
    sensitive << ( outrow_fu_472_p2 );

    SC_METHOD(thread_icmp_ln73_2_fu_617_p2);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( and_ln68_fu_606_p2 );
    sensitive << ( ap_predicate_op169_write_state10 );
    sensitive << ( outcol_fu_611_p2 );

    SC_METHOD(thread_icmp_ln73_3_fu_623_p2);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( and_ln68_fu_606_p2 );
    sensitive << ( ap_predicate_op169_write_state10 );
    sensitive << ( outcol_fu_611_p2 );

    SC_METHOD(thread_icmp_ln73_fu_478_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln46_fu_448_p2 );
    sensitive << ( outrow_fu_472_p2 );

    SC_METHOD(thread_inImage_blk_n);
    sensitive << ( inImage_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln47_fu_490_p2 );
    sensitive << ( and_ln50_fu_508_p2 );

    SC_METHOD(thread_inImage_read);
    sensitive << ( inImage_empty_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_predicate_op114_read_state7 );

    SC_METHOD(thread_j_fu_379_p2);
    sensitive << ( j_0_reg_238 );

    SC_METHOD(thread_mul_ln16_1_fu_798_p0);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( mul_ln16_1_fu_798_p00 );

    SC_METHOD(thread_mul_ln16_1_fu_798_p00);
    sensitive << ( tmp_4_reg_1051 );

    SC_METHOD(thread_mul_ln16_1_fu_798_p1);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( mul_ln16_1_fu_798_p10 );

    SC_METHOD(thread_mul_ln16_1_fu_798_p10);
    sensitive << ( tmp_5_reg_1056 );

    SC_METHOD(thread_mul_ln16_1_fu_798_p2);
    sensitive << ( mul_ln16_1_fu_798_p0 );
    sensitive << ( mul_ln16_1_fu_798_p1 );

    SC_METHOD(thread_or_ln73_1_fu_634_p2);
    sensitive << ( icmp_ln73_1_reg_992 );
    sensitive << ( icmp_ln73_3_fu_623_p2 );

    SC_METHOD(thread_or_ln73_2_fu_639_p2);
    sensitive << ( or_ln73_1_fu_634_p2 );
    sensitive << ( or_ln73_fu_629_p2 );

    SC_METHOD(thread_or_ln73_fu_629_p2);
    sensitive << ( icmp_ln73_reg_987 );
    sensitive << ( icmp_ln73_2_fu_617_p2 );

    SC_METHOD(thread_outImage_blk_n);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( and_ln68_fu_606_p2 );
    sensitive << ( or_ln73_2_fu_639_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( and_ln68_reg_1035 );
    sensitive << ( or_ln73_2_reg_1039 );
    sensitive << ( icmp_ln14_fu_645_p2 );

    SC_METHOD(thread_outImage_din);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op169_write_state10 );
    sensitive << ( ap_predicate_op197_write_state11 );
    sensitive << ( result_0_i_reg_297 );

    SC_METHOD(thread_outImage_write);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_predicate_op169_write_state10 );
    sensitive << ( ap_predicate_op197_write_state11 );

    SC_METHOD(thread_outcol_fu_611_p2);
    sensitive << ( col_0_reg_261 );

    SC_METHOD(thread_outrow_fu_472_p2);
    sensitive << ( zext_ln46_fu_444_p1 );

    SC_METHOD(thread_part_buffer_0_ce0);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_predicate_op169_write_state10 );

    SC_METHOD(thread_part_buffer_0_we0);
    sensitive << ( outImage_full_n );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln50_1_reg_1005 );
    sensitive << ( ap_predicate_op169_write_state10 );

    SC_METHOD(thread_part_buffer_1_address0);
    sensitive << ( icmp_ln50_1_reg_1005 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln55_fu_513_p2 );
    sensitive << ( zext_ln62_fu_579_p1 );

    SC_METHOD(thread_part_buffer_1_ce0);
    sensitive << ( icmp_ln50_1_reg_1005 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln55_fu_513_p2 );

    SC_METHOD(thread_part_buffer_1_we0);
    sensitive << ( icmp_ln50_1_reg_1005 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln55_fu_513_p2 );

    SC_METHOD(thread_row_fu_454_p2);
    sensitive << ( row_0_reg_250 );

    SC_METHOD(thread_sext_ln40_fu_394_p1);
    sensitive << ( add_ln40_fu_389_p2 );

    SC_METHOD(thread_sub_ln40_fu_367_p2);
    sensitive << ( zext_ln40_1_fu_363_p1 );
    sensitive << ( zext_ln40_fu_351_p1 );

    SC_METHOD(thread_tmp_8_fu_355_p3);
    sensitive << ( i_0_reg_226 );

    SC_METHOD(thread_zext_ln16_10_fu_810_p1);
    sensitive << ( add_ln16_1_reg_1091 );

    SC_METHOD(thread_zext_ln40_1_fu_363_p1);
    sensitive << ( tmp_8_fu_355_p3 );

    SC_METHOD(thread_zext_ln40_2_fu_385_p1);
    sensitive << ( j_0_reg_238 );

    SC_METHOD(thread_zext_ln40_fu_351_p1);
    sensitive << ( i_0_reg_226 );

    SC_METHOD(thread_zext_ln46_fu_444_p1);
    sensitive << ( row_0_reg_250 );

    SC_METHOD(thread_zext_ln62_fu_579_p1);
    sensitive << ( col_0_reg_261 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( inImage_empty_n );
    sensitive << ( outImage_full_n );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln47_fu_490_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( and_ln68_reg_1035 );
    sensitive << ( or_ln73_2_reg_1039 );
    sensitive << ( icmp_ln14_fu_645_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln38_fu_339_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln39_fu_373_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln46_fu_448_p2 );
    sensitive << ( ap_predicate_op114_read_state7 );
    sensitive << ( icmp_ln50_1_reg_1005 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( icmp_ln55_fu_513_p2 );
    sensitive << ( ap_predicate_op169_write_state10 );
    sensitive << ( ap_predicate_op197_write_state11 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "gauss_blur_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, inImage_dout, "(port)inImage_dout");
    sc_trace(mVcdFile, inImage_empty_n, "(port)inImage_empty_n");
    sc_trace(mVcdFile, inImage_read, "(port)inImage_read");
    sc_trace(mVcdFile, gauss_kernel_address0, "(port)gauss_kernel_address0");
    sc_trace(mVcdFile, gauss_kernel_ce0, "(port)gauss_kernel_ce0");
    sc_trace(mVcdFile, gauss_kernel_q0, "(port)gauss_kernel_q0");
    sc_trace(mVcdFile, outImage_din, "(port)outImage_din");
    sc_trace(mVcdFile, outImage_full_n, "(port)outImage_full_n");
    sc_trace(mVcdFile, outImage_write, "(port)outImage_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, inImage_blk_n, "inImage_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln47_fu_490_p2, "icmp_ln47_fu_490_p2");
    sc_trace(mVcdFile, and_ln50_fu_508_p2, "and_ln50_fu_508_p2");
    sc_trace(mVcdFile, outImage_blk_n, "outImage_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, and_ln68_fu_606_p2, "and_ln68_fu_606_p2");
    sc_trace(mVcdFile, or_ln73_2_fu_639_p2, "or_ln73_2_fu_639_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, and_ln68_reg_1035, "and_ln68_reg_1035");
    sc_trace(mVcdFile, or_ln73_2_reg_1039, "or_ln73_2_reg_1039");
    sc_trace(mVcdFile, icmp_ln14_fu_645_p2, "icmp_ln14_fu_645_p2");
    sc_trace(mVcdFile, i_fu_345_p2, "i_fu_345_p2");
    sc_trace(mVcdFile, i_reg_892, "i_reg_892");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, sub_ln40_fu_367_p2, "sub_ln40_fu_367_p2");
    sc_trace(mVcdFile, sub_ln40_reg_897, "sub_ln40_reg_897");
    sc_trace(mVcdFile, icmp_ln38_fu_339_p2, "icmp_ln38_fu_339_p2");
    sc_trace(mVcdFile, j_fu_379_p2, "j_fu_379_p2");
    sc_trace(mVcdFile, j_reg_959, "j_reg_959");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln39_fu_373_p2, "icmp_ln39_fu_373_p2");
    sc_trace(mVcdFile, row_fu_454_p2, "row_fu_454_p2");
    sc_trace(mVcdFile, row_reg_972, "row_reg_972");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln50_fu_460_p2, "icmp_ln50_fu_460_p2");
    sc_trace(mVcdFile, icmp_ln50_reg_977, "icmp_ln50_reg_977");
    sc_trace(mVcdFile, icmp_ln46_fu_448_p2, "icmp_ln46_fu_448_p2");
    sc_trace(mVcdFile, icmp_ln68_fu_466_p2, "icmp_ln68_fu_466_p2");
    sc_trace(mVcdFile, icmp_ln68_reg_982, "icmp_ln68_reg_982");
    sc_trace(mVcdFile, icmp_ln73_fu_478_p2, "icmp_ln73_fu_478_p2");
    sc_trace(mVcdFile, icmp_ln73_reg_987, "icmp_ln73_reg_987");
    sc_trace(mVcdFile, icmp_ln73_1_fu_484_p2, "icmp_ln73_1_fu_484_p2");
    sc_trace(mVcdFile, icmp_ln73_1_reg_992, "icmp_ln73_1_reg_992");
    sc_trace(mVcdFile, col_fu_496_p2, "col_fu_496_p2");
    sc_trace(mVcdFile, col_reg_1000, "col_reg_1000");
    sc_trace(mVcdFile, ap_predicate_op114_read_state7, "ap_predicate_op114_read_state7");
    sc_trace(mVcdFile, ap_block_state7, "ap_block_state7");
    sc_trace(mVcdFile, icmp_ln50_1_fu_502_p2, "icmp_ln50_1_fu_502_p2");
    sc_trace(mVcdFile, icmp_ln50_1_reg_1005, "icmp_ln50_1_reg_1005");
    sc_trace(mVcdFile, i_1_fu_519_p2, "i_1_fu_519_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, part_buffer_0_addr_reg_1020, "part_buffer_0_addr_reg_1020");
    sc_trace(mVcdFile, icmp_ln55_fu_513_p2, "icmp_ln55_fu_513_p2");
    sc_trace(mVcdFile, part_buffer_1_q0, "part_buffer_1_q0");
    sc_trace(mVcdFile, window_1_2_reg_1030, "window_1_2_reg_1030");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_predicate_op169_write_state10, "ap_predicate_op169_write_state10");
    sc_trace(mVcdFile, ap_block_state10, "ap_block_state10");
    sc_trace(mVcdFile, i_2_fu_651_p2, "i_2_fu_651_p2");
    sc_trace(mVcdFile, i_2_reg_1046, "i_2_reg_1046");
    sc_trace(mVcdFile, ap_predicate_op197_write_state11, "ap_predicate_op197_write_state11");
    sc_trace(mVcdFile, ap_block_state11, "ap_block_state11");
    sc_trace(mVcdFile, tmp_4_fu_675_p5, "tmp_4_fu_675_p5");
    sc_trace(mVcdFile, tmp_4_reg_1051, "tmp_4_reg_1051");
    sc_trace(mVcdFile, tmp_5_fu_687_p5, "tmp_5_fu_687_p5");
    sc_trace(mVcdFile, tmp_5_reg_1056, "tmp_5_reg_1056");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, mul_ln16_1_fu_798_p2, "mul_ln16_1_fu_798_p2");
    sc_trace(mVcdFile, mul_ln16_1_reg_1081, "mul_ln16_1_reg_1081");
    sc_trace(mVcdFile, grp_fu_819_p3, "grp_fu_819_p3");
    sc_trace(mVcdFile, add_ln16_reg_1086, "add_ln16_reg_1086");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, grp_fu_827_p3, "grp_fu_827_p3");
    sc_trace(mVcdFile, add_ln16_1_reg_1091, "add_ln16_1_reg_1091");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, add_ln16_2_fu_813_p2, "add_ln16_2_fu_813_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, part_buffer_0_ce0, "part_buffer_0_ce0");
    sc_trace(mVcdFile, part_buffer_0_we0, "part_buffer_0_we0");
    sc_trace(mVcdFile, part_buffer_0_q0, "part_buffer_0_q0");
    sc_trace(mVcdFile, part_buffer_1_address0, "part_buffer_1_address0");
    sc_trace(mVcdFile, part_buffer_1_ce0, "part_buffer_1_ce0");
    sc_trace(mVcdFile, part_buffer_1_we0, "part_buffer_1_we0");
    sc_trace(mVcdFile, i_0_reg_226, "i_0_reg_226");
    sc_trace(mVcdFile, j_0_reg_238, "j_0_reg_238");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, row_0_reg_250, "row_0_reg_250");
    sc_trace(mVcdFile, col_0_reg_261, "col_0_reg_261");
    sc_trace(mVcdFile, window_2_2_reg_273, "window_2_2_reg_273");
    sc_trace(mVcdFile, ap_phi_mux_i1_0_phi_fu_290_p4, "ap_phi_mux_i1_0_phi_fu_290_p4");
    sc_trace(mVcdFile, i1_0_reg_286, "i1_0_reg_286");
    sc_trace(mVcdFile, result_0_i_reg_297, "result_0_i_reg_297");
    sc_trace(mVcdFile, i_0_i_reg_309, "i_0_i_reg_309");
    sc_trace(mVcdFile, sext_ln40_fu_394_p1, "sext_ln40_fu_394_p1");
    sc_trace(mVcdFile, zext_ln62_fu_579_p1, "zext_ln62_fu_579_p1");
    sc_trace(mVcdFile, kernel_2_2_fu_96, "kernel_2_2_fu_96");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, kernel_2_2_1_fu_100, "kernel_2_2_1_fu_100");
    sc_trace(mVcdFile, kernel_2_2_2_fu_104, "kernel_2_2_2_fu_104");
    sc_trace(mVcdFile, kernel_2_2_3_fu_108, "kernel_2_2_3_fu_108");
    sc_trace(mVcdFile, kernel_2_2_4_fu_112, "kernel_2_2_4_fu_112");
    sc_trace(mVcdFile, kernel_2_2_5_fu_116, "kernel_2_2_5_fu_116");
    sc_trace(mVcdFile, kernel_2_2_6_fu_120, "kernel_2_2_6_fu_120");
    sc_trace(mVcdFile, kernel_2_2_7_fu_124, "kernel_2_2_7_fu_124");
    sc_trace(mVcdFile, kernel_2_2_8_fu_128, "kernel_2_2_8_fu_128");
    sc_trace(mVcdFile, window_2_0_fu_140, "window_2_0_fu_140");
    sc_trace(mVcdFile, window_0_0_fu_525_p5, "window_0_0_fu_525_p5");
    sc_trace(mVcdFile, window_2_1_fu_144, "window_2_1_fu_144");
    sc_trace(mVcdFile, window_0_1_fu_537_p5, "window_0_1_fu_537_p5");
    sc_trace(mVcdFile, window_0_2_1_fu_148, "window_0_2_1_fu_148");
    sc_trace(mVcdFile, window_2_0_1_fu_152, "window_2_0_1_fu_152");
    sc_trace(mVcdFile, window_2_1_1_fu_156, "window_2_1_1_fu_156");
    sc_trace(mVcdFile, window_1_2_1_fu_160, "window_1_2_1_fu_160");
    sc_trace(mVcdFile, window_2_0_2_fu_164, "window_2_0_2_fu_164");
    sc_trace(mVcdFile, window_2_1_2_fu_168, "window_2_1_2_fu_168");
    sc_trace(mVcdFile, window_2_2_1_fu_172, "window_2_2_1_fu_172");
    sc_trace(mVcdFile, tmp_8_fu_355_p3, "tmp_8_fu_355_p3");
    sc_trace(mVcdFile, zext_ln40_1_fu_363_p1, "zext_ln40_1_fu_363_p1");
    sc_trace(mVcdFile, zext_ln40_fu_351_p1, "zext_ln40_fu_351_p1");
    sc_trace(mVcdFile, zext_ln40_2_fu_385_p1, "zext_ln40_2_fu_385_p1");
    sc_trace(mVcdFile, add_ln40_fu_389_p2, "add_ln40_fu_389_p2");
    sc_trace(mVcdFile, zext_ln46_fu_444_p1, "zext_ln46_fu_444_p1");
    sc_trace(mVcdFile, outrow_fu_472_p2, "outrow_fu_472_p2");
    sc_trace(mVcdFile, icmp_ln68_1_fu_600_p2, "icmp_ln68_1_fu_600_p2");
    sc_trace(mVcdFile, outcol_fu_611_p2, "outcol_fu_611_p2");
    sc_trace(mVcdFile, icmp_ln73_2_fu_617_p2, "icmp_ln73_2_fu_617_p2");
    sc_trace(mVcdFile, icmp_ln73_3_fu_623_p2, "icmp_ln73_3_fu_623_p2");
    sc_trace(mVcdFile, or_ln73_1_fu_634_p2, "or_ln73_1_fu_634_p2");
    sc_trace(mVcdFile, or_ln73_fu_629_p2, "or_ln73_fu_629_p2");
    sc_trace(mVcdFile, tmp_6_fu_699_p5, "tmp_6_fu_699_p5");
    sc_trace(mVcdFile, tmp_7_fu_715_p5, "tmp_7_fu_715_p5");
    sc_trace(mVcdFile, tmp_2_fu_760_p5, "tmp_2_fu_760_p5");
    sc_trace(mVcdFile, tmp_3_fu_776_p5, "tmp_3_fu_776_p5");
    sc_trace(mVcdFile, mul_ln16_1_fu_798_p0, "mul_ln16_1_fu_798_p0");
    sc_trace(mVcdFile, mul_ln16_1_fu_798_p1, "mul_ln16_1_fu_798_p1");
    sc_trace(mVcdFile, zext_ln16_10_fu_810_p1, "zext_ln16_10_fu_810_p1");
    sc_trace(mVcdFile, grp_fu_819_p0, "grp_fu_819_p0");
    sc_trace(mVcdFile, grp_fu_819_p1, "grp_fu_819_p1");
    sc_trace(mVcdFile, grp_fu_819_p2, "grp_fu_819_p2");
    sc_trace(mVcdFile, grp_fu_827_p0, "grp_fu_827_p0");
    sc_trace(mVcdFile, grp_fu_827_p1, "grp_fu_827_p1");
    sc_trace(mVcdFile, grp_fu_827_p2, "grp_fu_827_p2");
    sc_trace(mVcdFile, grp_fu_819_ce, "grp_fu_819_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, grp_fu_819_p00, "grp_fu_819_p00");
    sc_trace(mVcdFile, grp_fu_819_p10, "grp_fu_819_p10");
    sc_trace(mVcdFile, grp_fu_819_p20, "grp_fu_819_p20");
    sc_trace(mVcdFile, grp_fu_827_p00, "grp_fu_827_p00");
    sc_trace(mVcdFile, grp_fu_827_p10, "grp_fu_827_p10");
    sc_trace(mVcdFile, grp_fu_827_p20, "grp_fu_827_p20");
    sc_trace(mVcdFile, mul_ln16_1_fu_798_p00, "mul_ln16_1_fu_798_p00");
    sc_trace(mVcdFile, mul_ln16_1_fu_798_p10, "mul_ln16_1_fu_798_p10");
    sc_trace(mVcdFile, ap_condition_143, "ap_condition_143");
#endif

    }
    mHdltvinHandle.open("gauss_blur.hdltvin.dat");
    mHdltvoutHandle.open("gauss_blur.hdltvout.dat");
}

gauss_blur::~gauss_blur() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete part_buffer_0_U;
    delete part_buffer_1_U;
    delete gauss_blur_mux_32dEe_U1;
    delete gauss_blur_mux_32dEe_U2;
    delete gauss_blur_mux_32dEe_U3;
    delete gauss_blur_mux_32dEe_U4;
    delete gauss_blur_mux_32dEe_U5;
    delete gauss_blur_mux_32dEe_U6;
    delete gauss_blur_mux_32dEe_U7;
    delete gauss_blur_mux_32dEe_U8;
    delete gauss_blur_mac_mueOg_U9;
    delete gauss_blur_mac_mufYi_U10;
}

void gauss_blur::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void gauss_blur::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op197_write_state11.read())) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_645_p2.read()) || 
           esl_seteq<1,1,1>(ap_const_lv1_1, or_ln73_2_reg_1039.read())) || 
          esl_seteq<1,1,1>(ap_const_lv1_0, and_ln68_reg_1035.read())))) {
        col_0_reg_261 = col_reg_1000.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln46_fu_448_p2.read()))) {
        col_0_reg_261 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln55_fu_513_p2.read()))) {
        i1_0_reg_286 = i_1_fu_519_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(icmp_ln47_fu_490_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, inImage_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_read_state7.read())))) {
        i1_0_reg_286 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, and_ln68_fu_606_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln73_2_fu_639_p2.read()))) {
        i_0_i_reg_309 = ap_const_lv2_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        i_0_i_reg_309 = i_2_reg_1046.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln39_fu_373_p2.read()))) {
        i_0_reg_226 = i_reg_892.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_226 = ap_const_lv2_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_0_reg_238 = j_reg_959.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln38_fu_339_p2.read()))) {
        j_0_reg_238 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, and_ln68_fu_606_p2.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read())) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln73_2_fu_639_p2.read()))) {
        result_0_i_reg_297 = ap_const_lv20_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        result_0_i_reg_297 = add_ln16_2_fu_813_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln38_fu_339_p2.read()))) {
        row_0_reg_250 = ap_const_lv10_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, inImage_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_read_state7.read())) && 
                esl_seteq<1,1,1>(icmp_ln47_fu_490_p2.read(), ap_const_lv1_1))) {
        row_0_reg_250 = row_reg_972.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_143.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, and_ln50_fu_508_p2.read())) {
            window_2_2_reg_273 = ap_const_lv8_0;
        } else if (esl_seteq<1,1,1>(and_ln50_fu_508_p2.read(), ap_const_lv1_1)) {
            window_2_2_reg_273 = inImage_dout.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        add_ln16_1_reg_1091 = grp_fu_827_p3.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        add_ln16_reg_1086 = grp_fu_819_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read())))) {
        and_ln68_reg_1035 = and_ln68_fu_606_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, inImage_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_read_state7.read())))) {
        col_reg_1000 = col_fu_496_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln68_reg_1035.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln73_2_reg_1039.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op197_write_state11.read())))) {
        i_2_reg_1046 = i_2_fu_651_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_892 = i_fu_345_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln47_fu_490_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(ap_const_logic_0, inImage_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_read_state7.read())))) {
        icmp_ln50_1_reg_1005 = icmp_ln50_1_fu_502_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln46_fu_448_p2.read()))) {
        icmp_ln50_reg_977 = icmp_ln50_fu_460_p2.read();
        icmp_ln68_reg_982 = icmp_ln68_fu_466_p2.read();
        icmp_ln73_1_reg_992 = icmp_ln73_1_fu_484_p2.read();
        icmp_ln73_reg_987 = icmp_ln73_fu_478_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_959 = j_fu_379_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, i_0_reg_226.read()) && esl_seteq<1,2,2>(j_0_reg_238.read(), ap_const_lv2_1))) {
        kernel_2_2_1_fu_100 = gauss_kernel_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, i_0_reg_226.read()) && !esl_seteq<1,2,2>(ap_const_lv2_0, j_0_reg_238.read()) && !esl_seteq<1,2,2>(j_0_reg_238.read(), ap_const_lv2_1))) {
        kernel_2_2_2_fu_104 = gauss_kernel_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, j_0_reg_238.read()) && esl_seteq<1,2,2>(i_0_reg_226.read(), ap_const_lv2_1))) {
        kernel_2_2_3_fu_108 = gauss_kernel_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,2,2>(j_0_reg_238.read(), ap_const_lv2_1) && esl_seteq<1,2,2>(i_0_reg_226.read(), ap_const_lv2_1))) {
        kernel_2_2_4_fu_112 = gauss_kernel_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !esl_seteq<1,2,2>(ap_const_lv2_0, j_0_reg_238.read()) && !esl_seteq<1,2,2>(j_0_reg_238.read(), ap_const_lv2_1) && esl_seteq<1,2,2>(i_0_reg_226.read(), ap_const_lv2_1))) {
        kernel_2_2_5_fu_116 = gauss_kernel_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, j_0_reg_238.read()) && !esl_seteq<1,2,2>(ap_const_lv2_0, i_0_reg_226.read()) && !esl_seteq<1,2,2>(i_0_reg_226.read(), ap_const_lv2_1))) {
        kernel_2_2_6_fu_120 = gauss_kernel_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,2,2>(j_0_reg_238.read(), ap_const_lv2_1) && !esl_seteq<1,2,2>(ap_const_lv2_0, i_0_reg_226.read()) && !esl_seteq<1,2,2>(i_0_reg_226.read(), ap_const_lv2_1))) {
        kernel_2_2_7_fu_124 = gauss_kernel_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && !esl_seteq<1,2,2>(ap_const_lv2_0, j_0_reg_238.read()) && !esl_seteq<1,2,2>(j_0_reg_238.read(), ap_const_lv2_1) && !esl_seteq<1,2,2>(ap_const_lv2_0, i_0_reg_226.read()) && !esl_seteq<1,2,2>(i_0_reg_226.read(), ap_const_lv2_1))) {
        kernel_2_2_8_fu_128 = gauss_kernel_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, i_0_reg_226.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, j_0_reg_238.read()))) {
        kernel_2_2_fu_96 = gauss_kernel_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        mul_ln16_1_reg_1081 = mul_ln16_1_fu_798_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln68_fu_606_p2.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read())))) {
        or_ln73_2_reg_1039 = or_ln73_2_fu_639_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln55_fu_513_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln50_1_reg_1005.read()))) {
        part_buffer_0_addr_reg_1020 =  (sc_lv<9>) (zext_ln62_fu_579_p1.read());
        window_2_2_1_fu_172 = window_2_2_reg_273.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        row_reg_972 = row_fu_454_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln38_fu_339_p2.read()))) {
        sub_ln40_reg_897 = sub_ln40_fu_367_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln68_reg_1035.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln73_2_reg_1039.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op197_write_state11.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_645_p2.read()))) {
        tmp_4_reg_1051 = tmp_4_fu_675_p5.read();
        tmp_5_reg_1056 = tmp_5_fu_687_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln50_1_reg_1005.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read())))) {
        window_0_2_1_fu_148 = part_buffer_0_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        window_1_2_1_fu_160 = part_buffer_1_q0.read();
        window_1_2_reg_1030 = part_buffer_1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln55_fu_513_p2.read()) && esl_seteq<1,2,2>(ap_phi_mux_i1_0_phi_fu_290_p4.read(), ap_const_lv2_1))) {
        window_2_0_1_fu_152 = window_0_0_fu_525_p5.read();
        window_2_1_1_fu_156 = window_0_1_fu_537_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln55_fu_513_p2.read()) && !esl_seteq<1,2,2>(ap_const_lv2_0, ap_phi_mux_i1_0_phi_fu_290_p4.read()) && !esl_seteq<1,2,2>(ap_phi_mux_i1_0_phi_fu_290_p4.read(), ap_const_lv2_1))) {
        window_2_0_2_fu_164 = window_0_0_fu_525_p5.read();
        window_2_1_2_fu_168 = window_0_1_fu_537_p5.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln55_fu_513_p2.read()) && esl_seteq<1,2,2>(ap_const_lv2_0, ap_phi_mux_i1_0_phi_fu_290_p4.read()))) {
        window_2_0_fu_140 = window_0_0_fu_525_p5.read();
        window_2_1_fu_144 = window_0_1_fu_537_p5.read();
    }
}

void gauss_blur::thread_add_ln16_2_fu_813_p2() {
    add_ln16_2_fu_813_p2 = (!result_0_i_reg_297.read().is_01() || !zext_ln16_10_fu_810_p1.read().is_01())? sc_lv<20>(): (sc_biguint<20>(result_0_i_reg_297.read()) + sc_biguint<20>(zext_ln16_10_fu_810_p1.read()));
}

void gauss_blur::thread_add_ln40_fu_389_p2() {
    add_ln40_fu_389_p2 = (!sub_ln40_reg_897.read().is_01() || !zext_ln40_2_fu_385_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(sub_ln40_reg_897.read()) + sc_biguint<5>(zext_ln40_2_fu_385_p1.read()));
}

void gauss_blur::thread_and_ln50_fu_508_p2() {
    and_ln50_fu_508_p2 = (icmp_ln50_reg_977.read() & icmp_ln50_1_fu_502_p2.read());
}

void gauss_blur::thread_and_ln68_fu_606_p2() {
    and_ln68_fu_606_p2 = (icmp_ln68_reg_982.read() & icmp_ln68_1_fu_600_p2.read());
}

void gauss_blur::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void gauss_blur::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void gauss_blur::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void gauss_blur::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void gauss_blur::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void gauss_blur::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void gauss_blur::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void gauss_blur::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void gauss_blur::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void gauss_blur::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void gauss_blur::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void gauss_blur::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void gauss_blur::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void gauss_blur::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void gauss_blur::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void gauss_blur::thread_ap_block_state10() {
    ap_block_state10 = (esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read()));
}

void gauss_blur::thread_ap_block_state11() {
    ap_block_state11 = (esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op197_write_state11.read()));
}

void gauss_blur::thread_ap_block_state7() {
    ap_block_state7 = (esl_seteq<1,1,1>(ap_const_logic_0, inImage_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_read_state7.read()));
}

void gauss_blur::thread_ap_condition_143() {
    ap_condition_143 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln47_fu_490_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(ap_const_logic_0, inImage_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_read_state7.read())));
}

void gauss_blur::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln46_fu_448_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void gauss_blur::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void gauss_blur::thread_ap_phi_mux_i1_0_phi_fu_290_p4() {
    ap_phi_mux_i1_0_phi_fu_290_p4 = i1_0_reg_286.read();
}

void gauss_blur::thread_ap_predicate_op114_read_state7() {
    ap_predicate_op114_read_state7 = (esl_seteq<1,1,1>(icmp_ln47_fu_490_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(and_ln50_fu_508_p2.read(), ap_const_lv1_1));
}

void gauss_blur::thread_ap_predicate_op169_write_state10() {
    ap_predicate_op169_write_state10 = (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln68_fu_606_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln73_2_fu_639_p2.read()));
}

void gauss_blur::thread_ap_predicate_op197_write_state11() {
    ap_predicate_op197_write_state11 = (esl_seteq<1,1,1>(ap_const_lv1_1, and_ln68_reg_1035.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln73_2_reg_1039.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_645_p2.read()));
}

void gauss_blur::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln46_fu_448_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void gauss_blur::thread_col_fu_496_p2() {
    col_fu_496_p2 = (!col_0_reg_261.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(col_0_reg_261.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void gauss_blur::thread_gauss_kernel_address0() {
    gauss_kernel_address0 =  (sc_lv<4>) (sext_ln40_fu_394_p1.read());
}

void gauss_blur::thread_gauss_kernel_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        gauss_kernel_ce0 = ap_const_logic_1;
    } else {
        gauss_kernel_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_grp_fu_819_ce() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op197_write_state11.read()))) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        grp_fu_819_ce = ap_const_logic_1;
    } else {
        grp_fu_819_ce = ap_const_logic_0;
    }
}

void gauss_blur::thread_grp_fu_819_p0() {
    grp_fu_819_p0 =  (sc_lv<8>) (grp_fu_819_p00.read());
}

void gauss_blur::thread_grp_fu_819_p00() {
    grp_fu_819_p00 = esl_zext<16,8>(tmp_6_fu_699_p5.read());
}

void gauss_blur::thread_grp_fu_819_p1() {
    grp_fu_819_p1 =  (sc_lv<8>) (grp_fu_819_p10.read());
}

void gauss_blur::thread_grp_fu_819_p10() {
    grp_fu_819_p10 = esl_zext<16,8>(tmp_7_fu_715_p5.read());
}

void gauss_blur::thread_grp_fu_819_p2() {
    grp_fu_819_p2 =  (sc_lv<16>) (grp_fu_819_p20.read());
}

void gauss_blur::thread_grp_fu_819_p20() {
    grp_fu_819_p20 = esl_zext<17,16>(mul_ln16_1_reg_1081.read());
}

void gauss_blur::thread_grp_fu_827_p0() {
    grp_fu_827_p0 =  (sc_lv<8>) (grp_fu_827_p00.read());
}

void gauss_blur::thread_grp_fu_827_p00() {
    grp_fu_827_p00 = esl_zext<16,8>(tmp_2_fu_760_p5.read());
}

void gauss_blur::thread_grp_fu_827_p1() {
    grp_fu_827_p1 =  (sc_lv<8>) (grp_fu_827_p10.read());
}

void gauss_blur::thread_grp_fu_827_p10() {
    grp_fu_827_p10 = esl_zext<16,8>(tmp_3_fu_776_p5.read());
}

void gauss_blur::thread_grp_fu_827_p2() {
    grp_fu_827_p2 =  (sc_lv<17>) (grp_fu_827_p20.read());
}

void gauss_blur::thread_grp_fu_827_p20() {
    grp_fu_827_p20 = esl_zext<18,17>(add_ln16_reg_1086.read());
}

void gauss_blur::thread_i_1_fu_519_p2() {
    i_1_fu_519_p2 = (!i1_0_reg_286.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i1_0_reg_286.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void gauss_blur::thread_i_2_fu_651_p2() {
    i_2_fu_651_p2 = (!i_0_i_reg_309.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_0_i_reg_309.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void gauss_blur::thread_i_fu_345_p2() {
    i_fu_345_p2 = (!i_0_reg_226.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(i_0_reg_226.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void gauss_blur::thread_icmp_ln14_fu_645_p2() {
    icmp_ln14_fu_645_p2 = (!i_0_i_reg_309.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_309.read() == ap_const_lv2_3);
}

void gauss_blur::thread_icmp_ln38_fu_339_p2() {
    icmp_ln38_fu_339_p2 = (!i_0_reg_226.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_226.read() == ap_const_lv2_3);
}

void gauss_blur::thread_icmp_ln39_fu_373_p2() {
    icmp_ln39_fu_373_p2 = (!j_0_reg_238.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_238.read() == ap_const_lv2_3);
}

void gauss_blur::thread_icmp_ln46_fu_448_p2() {
    icmp_ln46_fu_448_p2 = (!row_0_reg_250.read().is_01() || !ap_const_lv10_281.is_01())? sc_lv<1>(): sc_lv<1>(row_0_reg_250.read() == ap_const_lv10_281);
}

void gauss_blur::thread_icmp_ln47_fu_490_p2() {
    icmp_ln47_fu_490_p2 = (!col_0_reg_261.read().is_01() || !ap_const_lv9_1E1.is_01())? sc_lv<1>(): sc_lv<1>(col_0_reg_261.read() == ap_const_lv9_1E1);
}

void gauss_blur::thread_icmp_ln50_1_fu_502_p2() {
    icmp_ln50_1_fu_502_p2 = (!col_0_reg_261.read().is_01() || !ap_const_lv9_1E0.is_01())? sc_lv<1>(): (sc_biguint<9>(col_0_reg_261.read()) < sc_biguint<9>(ap_const_lv9_1E0));
}

void gauss_blur::thread_icmp_ln50_fu_460_p2() {
    icmp_ln50_fu_460_p2 = (!row_0_reg_250.read().is_01() || !ap_const_lv10_280.is_01())? sc_lv<1>(): (sc_biguint<10>(row_0_reg_250.read()) < sc_biguint<10>(ap_const_lv10_280));
}

void gauss_blur::thread_icmp_ln55_fu_513_p2() {
    icmp_ln55_fu_513_p2 = (!i1_0_reg_286.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(i1_0_reg_286.read() == ap_const_lv2_3);
}

void gauss_blur::thread_icmp_ln68_1_fu_600_p2() {
    icmp_ln68_1_fu_600_p2 = (!col_0_reg_261.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(col_0_reg_261.read() != ap_const_lv9_0);
}

void gauss_blur::thread_icmp_ln68_fu_466_p2() {
    icmp_ln68_fu_466_p2 = (!row_0_reg_250.read().is_01() || !ap_const_lv10_0.is_01())? sc_lv<1>(): sc_lv<1>(row_0_reg_250.read() != ap_const_lv10_0);
}

void gauss_blur::thread_icmp_ln73_1_fu_484_p2() {
    icmp_ln73_1_fu_484_p2 = (!outrow_fu_472_p2.read().is_01() || !ap_const_lv11_27F.is_01())? sc_lv<1>(): sc_lv<1>(outrow_fu_472_p2.read() == ap_const_lv11_27F);
}

void gauss_blur::thread_icmp_ln73_2_fu_617_p2() {
    icmp_ln73_2_fu_617_p2 = (!outcol_fu_611_p2.read().is_01() || !ap_const_lv9_0.is_01())? sc_lv<1>(): sc_lv<1>(outcol_fu_611_p2.read() == ap_const_lv9_0);
}

void gauss_blur::thread_icmp_ln73_3_fu_623_p2() {
    icmp_ln73_3_fu_623_p2 = (!outcol_fu_611_p2.read().is_01() || !ap_const_lv9_1DF.is_01())? sc_lv<1>(): sc_lv<1>(outcol_fu_611_p2.read() == ap_const_lv9_1DF);
}

void gauss_blur::thread_icmp_ln73_fu_478_p2() {
    icmp_ln73_fu_478_p2 = (!outrow_fu_472_p2.read().is_01() || !ap_const_lv11_0.is_01())? sc_lv<1>(): sc_lv<1>(outrow_fu_472_p2.read() == ap_const_lv11_0);
}

void gauss_blur::thread_inImage_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(icmp_ln47_fu_490_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(and_ln50_fu_508_p2.read(), ap_const_lv1_1))) {
        inImage_blk_n = inImage_empty_n.read();
    } else {
        inImage_blk_n = ap_const_logic_1;
    }
}

void gauss_blur::thread_inImage_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_read_state7.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, inImage_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_read_state7.read())))) {
        inImage_read = ap_const_logic_1;
    } else {
        inImage_read = ap_const_logic_0;
    }
}

void gauss_blur::thread_j_fu_379_p2() {
    j_fu_379_p2 = (!j_0_reg_238.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_0_reg_238.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void gauss_blur::thread_mul_ln16_1_fu_798_p0() {
    mul_ln16_1_fu_798_p0 =  (sc_lv<8>) (mul_ln16_1_fu_798_p00.read());
}

void gauss_blur::thread_mul_ln16_1_fu_798_p00() {
    mul_ln16_1_fu_798_p00 = esl_zext<16,8>(tmp_4_reg_1051.read());
}

void gauss_blur::thread_mul_ln16_1_fu_798_p1() {
    mul_ln16_1_fu_798_p1 =  (sc_lv<8>) (mul_ln16_1_fu_798_p10.read());
}

void gauss_blur::thread_mul_ln16_1_fu_798_p10() {
    mul_ln16_1_fu_798_p10 = esl_zext<16,8>(tmp_5_reg_1056.read());
}

void gauss_blur::thread_mul_ln16_1_fu_798_p2() {
    mul_ln16_1_fu_798_p2 = (!mul_ln16_1_fu_798_p0.read().is_01() || !mul_ln16_1_fu_798_p1.read().is_01())? sc_lv<16>(): sc_biguint<8>(mul_ln16_1_fu_798_p0.read()) * sc_biguint<8>(mul_ln16_1_fu_798_p1.read());
}

void gauss_blur::thread_or_ln73_1_fu_634_p2() {
    or_ln73_1_fu_634_p2 = (icmp_ln73_1_reg_992.read() | icmp_ln73_3_fu_623_p2.read());
}

void gauss_blur::thread_or_ln73_2_fu_639_p2() {
    or_ln73_2_fu_639_p2 = (or_ln73_1_fu_634_p2.read() | or_ln73_fu_629_p2.read());
}

void gauss_blur::thread_or_ln73_fu_629_p2() {
    or_ln73_fu_629_p2 = (icmp_ln73_reg_987.read() | icmp_ln73_2_fu_617_p2.read());
}

void gauss_blur::thread_outImage_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln68_fu_606_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, or_ln73_2_fu_639_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, and_ln68_reg_1035.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, or_ln73_2_reg_1039.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_645_p2.read())))) {
        outImage_blk_n = outImage_full_n.read();
    } else {
        outImage_blk_n = ap_const_logic_1;
    }
}

void gauss_blur::thread_outImage_din() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op197_write_state11.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op197_write_state11.read())))) {
        outImage_din = result_0_i_reg_297.read().range(11, 4);
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read())))) {
        outImage_din = ap_const_lv8_0;
    } else {
        outImage_din = "XXXXXXXX";
    }
}

void gauss_blur::thread_outImage_write() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op197_write_state11.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op197_write_state11.read()))))) {
        outImage_write = ap_const_logic_1;
    } else {
        outImage_write = ap_const_logic_0;
    }
}

void gauss_blur::thread_outcol_fu_611_p2() {
    outcol_fu_611_p2 = (!col_0_reg_261.read().is_01() || !ap_const_lv9_1FF.is_01())? sc_lv<9>(): (sc_biguint<9>(col_0_reg_261.read()) + sc_bigint<9>(ap_const_lv9_1FF));
}

void gauss_blur::thread_outrow_fu_472_p2() {
    outrow_fu_472_p2 = (!zext_ln46_fu_444_p1.read().is_01() || !ap_const_lv11_7FF.is_01())? sc_lv<11>(): (sc_biguint<11>(zext_ln46_fu_444_p1.read()) + sc_bigint<11>(ap_const_lv11_7FF));
}

void gauss_blur::thread_part_buffer_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read()))))) {
        part_buffer_0_ce0 = ap_const_logic_1;
    } else {
        part_buffer_0_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_part_buffer_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln50_1_reg_1005.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read())))) {
        part_buffer_0_we0 = ap_const_logic_1;
    } else {
        part_buffer_0_we0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_part_buffer_1_address0() {
    part_buffer_1_address0 =  (sc_lv<9>) (zext_ln62_fu_579_p1.read());
}

void gauss_blur::thread_part_buffer_1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln55_fu_513_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln50_1_reg_1005.read()))) {
        part_buffer_1_ce0 = ap_const_logic_1;
    } else {
        part_buffer_1_ce0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_part_buffer_1_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln55_fu_513_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln50_1_reg_1005.read()))) {
        part_buffer_1_we0 = ap_const_logic_1;
    } else {
        part_buffer_1_we0 = ap_const_logic_0;
    }
}

void gauss_blur::thread_row_fu_454_p2() {
    row_fu_454_p2 = (!row_0_reg_250.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(row_0_reg_250.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void gauss_blur::thread_sext_ln40_fu_394_p1() {
    sext_ln40_fu_394_p1 = esl_sext<64,5>(add_ln40_fu_389_p2.read());
}

void gauss_blur::thread_sub_ln40_fu_367_p2() {
    sub_ln40_fu_367_p2 = (!zext_ln40_1_fu_363_p1.read().is_01() || !zext_ln40_fu_351_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln40_1_fu_363_p1.read()) - sc_biguint<5>(zext_ln40_fu_351_p1.read()));
}

void gauss_blur::thread_tmp_8_fu_355_p3() {
    tmp_8_fu_355_p3 = esl_concat<2,2>(i_0_reg_226.read(), ap_const_lv2_0);
}

void gauss_blur::thread_zext_ln16_10_fu_810_p1() {
    zext_ln16_10_fu_810_p1 = esl_zext<20,18>(add_ln16_1_reg_1091.read());
}

void gauss_blur::thread_zext_ln40_1_fu_363_p1() {
    zext_ln40_1_fu_363_p1 = esl_zext<5,4>(tmp_8_fu_355_p3.read());
}

void gauss_blur::thread_zext_ln40_2_fu_385_p1() {
    zext_ln40_2_fu_385_p1 = esl_zext<5,2>(j_0_reg_238.read());
}

void gauss_blur::thread_zext_ln40_fu_351_p1() {
    zext_ln40_fu_351_p1 = esl_zext<5,2>(i_0_reg_226.read());
}

void gauss_blur::thread_zext_ln46_fu_444_p1() {
    zext_ln46_fu_444_p1 = esl_zext<11,10>(row_0_reg_250.read());
}

void gauss_blur::thread_zext_ln62_fu_579_p1() {
    zext_ln62_fu_579_p1 = esl_zext<64,9>(col_0_reg_261.read());
}

void gauss_blur::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln38_fu_339_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln39_fu_373_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln46_fu_448_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, inImage_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_read_state7.read())) && esl_seteq<1,1,1>(icmp_ln47_fu_490_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln47_fu_490_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(ap_const_logic_0, inImage_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op114_read_state7.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln55_fu_513_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln50_1_reg_1005.read()))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln55_fu_513_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln50_1_reg_1005.read()))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op169_write_state10.read())))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op197_write_state11.read())) && ((esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln14_fu_645_p2.read()) || 
   esl_seteq<1,1,1>(ap_const_lv1_1, or_ln73_2_reg_1039.read())) || 
  esl_seteq<1,1,1>(ap_const_lv1_0, and_ln68_reg_1035.read())))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, and_ln68_reg_1035.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, or_ln73_2_reg_1039.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, outImage_full_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op197_write_state11.read())) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_645_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
            break;
    }
}

void gauss_blur::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inImage_dout\" :  \"" << inImage_dout.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"inImage_empty_n\" :  \"" << inImage_empty_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"inImage_read\" :  \"" << inImage_read.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gauss_kernel_address0\" :  \"" << gauss_kernel_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"gauss_kernel_ce0\" :  \"" << gauss_kernel_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"gauss_kernel_q0\" :  \"" << gauss_kernel_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outImage_din\" :  \"" << outImage_din.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"outImage_full_n\" :  \"" << outImage_full_n.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"outImage_write\" :  \"" << outImage_write.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

