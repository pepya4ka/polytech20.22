// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "foo_b.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic foo_b::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic foo_b::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<9> foo_b::ap_ST_fsm_state1 = "1";
const sc_lv<9> foo_b::ap_ST_fsm_state2 = "10";
const sc_lv<9> foo_b::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<9> foo_b::ap_ST_fsm_state7 = "1000";
const sc_lv<9> foo_b::ap_ST_fsm_state8 = "10000";
const sc_lv<9> foo_b::ap_ST_fsm_pp1_stage0 = "100000";
const sc_lv<9> foo_b::ap_ST_fsm_state13 = "1000000";
const sc_lv<9> foo_b::ap_ST_fsm_pp2_stage0 = "10000000";
const sc_lv<9> foo_b::ap_ST_fsm_state16 = "100000000";
const sc_lv<32> foo_b::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool foo_b::ap_const_boolean_1 = true;
const sc_lv<32> foo_b::ap_const_lv32_1 = "1";
const sc_lv<32> foo_b::ap_const_lv32_4 = "100";
const sc_lv<32> foo_b::ap_const_lv32_2 = "10";
const bool foo_b::ap_const_boolean_0 = false;
const sc_lv<1> foo_b::ap_const_lv1_0 = "0";
const sc_lv<32> foo_b::ap_const_lv32_3 = "11";
const sc_lv<32> foo_b::ap_const_lv32_5 = "101";
const sc_lv<32> foo_b::ap_const_lv32_7 = "111";
const sc_lv<1> foo_b::ap_const_lv1_1 = "1";
const sc_lv<32> foo_b::ap_const_lv32_6 = "110";
const sc_lv<15> foo_b::ap_const_lv15_0 = "000000000000000";
const sc_lv<64> foo_b::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<64> foo_b::ap_const_lv64_1 = "1";
const sc_lv<64> foo_b::ap_const_lv64_2 = "10";
const sc_lv<15> foo_b::ap_const_lv15_4000 = "100000000000000";
const sc_lv<15> foo_b::ap_const_lv15_1 = "1";
const sc_lv<32> foo_b::ap_const_lv32_8 = "1000";

foo_b::foo_b(sc_module_name name) : sc_module(name), mVcdFile(0) {
    temp1_U = new foo_b_temp1("temp1_U");
    temp1_U->clk(ap_clk);
    temp1_U->reset(ap_rst);
    temp1_U->address0(temp1_address0);
    temp1_U->ce0(temp1_ce0);
    temp1_U->we0(temp1_we0);
    temp1_U->d0(mul_ln8_reg_332);
    temp1_U->q0(temp1_q0);
    temp2_U = new foo_b_temp1("temp2_U");
    temp2_U->clk(ap_clk);
    temp2_U->reset(ap_rst);
    temp2_U->address0(temp2_address0);
    temp2_U->ce0(temp2_ce0);
    temp2_U->we0(temp2_we0);
    temp2_U->d0(mul_ln9_reg_337);
    temp2_U->q0(temp2_q0);
    temp3_U = new foo_b_temp1("temp3_U");
    temp3_U->clk(ap_clk);
    temp3_U->reset(ap_rst);
    temp3_U->address0(temp3_address0);
    temp3_U->ce0(temp3_ce0);
    temp3_U->we0(temp3_we0);
    temp3_U->d0(mul_ln12_reg_371);
    temp3_U->q0(temp3_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp1_stage0_iter1);

    SC_METHOD(thread_ap_block_state11_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state12_pp1_stage0_iter3);

    SC_METHOD(thread_ap_block_state14_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state15_pp2_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter0);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln7_fu_218_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state9);
    sensitive << ( icmp_ln11_fu_244_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state14);
    sensitive << ( icmp_ln14_fu_266_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter3 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_data_in_address0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( zext_ln8_fu_230_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_data_in_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_data_out_address0);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( zext_ln15_reg_385 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_data_out_ce0);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_data_out_d0);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( temp2_q0 );
    sensitive << ( temp3_q0 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_data_out_we0);
    sensitive << ( icmp_ln14_reg_376 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_i_fu_224_p2);
    sensitive << ( i_0_reg_181 );

    SC_METHOD(thread_icmp_ln11_fu_244_p2);
    sensitive << ( j_0_reg_192 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_icmp_ln14_fu_266_p2);
    sensitive << ( k_0_reg_203 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_icmp_ln7_fu_218_p2);
    sensitive << ( i_0_reg_181 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_j_fu_250_p2);
    sensitive << ( j_0_reg_192 );

    SC_METHOD(thread_k_fu_272_p2);
    sensitive << ( k_0_reg_203 );

    SC_METHOD(thread_mul_ln12_fu_261_p2);
    sensitive << ( reg_214 );
    sensitive << ( temp1_load_reg_366 );

    SC_METHOD(thread_mul_ln8_fu_235_p2);
    sensitive << ( reg_214 );
    sensitive << ( data_in_load_reg_326 );

    SC_METHOD(thread_mul_ln9_fu_240_p2);
    sensitive << ( scale_load_1_reg_301 );
    sensitive << ( data_in_load_reg_326 );

    SC_METHOD(thread_scale_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_scale_address1);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_scale_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_scale_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_temp1_address0);
    sensitive << ( zext_ln8_reg_315_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( zext_ln12_fu_256_p1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_temp1_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_temp1_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln7_reg_306_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_temp2_address0);
    sensitive << ( zext_ln8_reg_315_pp0_iter2_reg );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( zext_ln15_fu_278_p1 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_temp2_ce0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_temp2_we0);
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln7_reg_306_pp0_iter2_reg );
    sensitive << ( ap_enable_reg_pp0_iter3 );

    SC_METHOD(thread_temp3_address0);
    sensitive << ( zext_ln12_reg_356_pp1_iter2_reg );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( zext_ln15_fu_278_p1 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_temp3_ce0);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter3 );

    SC_METHOD(thread_temp3_we0);
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( icmp_ln11_reg_347_pp1_iter2_reg );
    sensitive << ( ap_enable_reg_pp1_iter3 );

    SC_METHOD(thread_zext_ln12_fu_256_p1);
    sensitive << ( j_0_reg_192 );

    SC_METHOD(thread_zext_ln15_fu_278_p1);
    sensitive << ( k_0_reg_203 );

    SC_METHOD(thread_zext_ln8_fu_230_p1);
    sensitive << ( i_0_reg_181 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln7_fu_218_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln11_fu_244_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln14_fu_266_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter3 );
    sensitive << ( ap_block_pp2_stage0_subdone );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "000000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "foo_b_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_in_address0, "(port)data_in_address0");
    sc_trace(mVcdFile, data_in_ce0, "(port)data_in_ce0");
    sc_trace(mVcdFile, data_in_q0, "(port)data_in_q0");
    sc_trace(mVcdFile, scale_address0, "(port)scale_address0");
    sc_trace(mVcdFile, scale_ce0, "(port)scale_ce0");
    sc_trace(mVcdFile, scale_q0, "(port)scale_q0");
    sc_trace(mVcdFile, scale_address1, "(port)scale_address1");
    sc_trace(mVcdFile, scale_ce1, "(port)scale_ce1");
    sc_trace(mVcdFile, scale_q1, "(port)scale_q1");
    sc_trace(mVcdFile, data_out_address0, "(port)data_out_address0");
    sc_trace(mVcdFile, data_out_ce0, "(port)data_out_ce0");
    sc_trace(mVcdFile, data_out_we0, "(port)data_out_we0");
    sc_trace(mVcdFile, data_out_d0, "(port)data_out_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i_0_reg_181, "i_0_reg_181");
    sc_trace(mVcdFile, j_0_reg_192, "j_0_reg_192");
    sc_trace(mVcdFile, k_0_reg_203, "k_0_reg_203");
    sc_trace(mVcdFile, reg_214, "reg_214");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, scale_load_1_reg_301, "scale_load_1_reg_301");
    sc_trace(mVcdFile, icmp_ln7_fu_218_p2, "icmp_ln7_fu_218_p2");
    sc_trace(mVcdFile, icmp_ln7_reg_306, "icmp_ln7_reg_306");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln7_reg_306_pp0_iter1_reg, "icmp_ln7_reg_306_pp0_iter1_reg");
    sc_trace(mVcdFile, icmp_ln7_reg_306_pp0_iter2_reg, "icmp_ln7_reg_306_pp0_iter2_reg");
    sc_trace(mVcdFile, i_fu_224_p2, "i_fu_224_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, zext_ln8_fu_230_p1, "zext_ln8_fu_230_p1");
    sc_trace(mVcdFile, zext_ln8_reg_315, "zext_ln8_reg_315");
    sc_trace(mVcdFile, zext_ln8_reg_315_pp0_iter1_reg, "zext_ln8_reg_315_pp0_iter1_reg");
    sc_trace(mVcdFile, zext_ln8_reg_315_pp0_iter2_reg, "zext_ln8_reg_315_pp0_iter2_reg");
    sc_trace(mVcdFile, data_in_load_reg_326, "data_in_load_reg_326");
    sc_trace(mVcdFile, mul_ln8_fu_235_p2, "mul_ln8_fu_235_p2");
    sc_trace(mVcdFile, mul_ln8_reg_332, "mul_ln8_reg_332");
    sc_trace(mVcdFile, mul_ln9_fu_240_p2, "mul_ln9_fu_240_p2");
    sc_trace(mVcdFile, mul_ln9_reg_337, "mul_ln9_reg_337");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln11_fu_244_p2, "icmp_ln11_fu_244_p2");
    sc_trace(mVcdFile, icmp_ln11_reg_347, "icmp_ln11_reg_347");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter0, "ap_block_state9_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage0_iter1, "ap_block_state10_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state11_pp1_stage0_iter2, "ap_block_state11_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state12_pp1_stage0_iter3, "ap_block_state12_pp1_stage0_iter3");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, icmp_ln11_reg_347_pp1_iter1_reg, "icmp_ln11_reg_347_pp1_iter1_reg");
    sc_trace(mVcdFile, icmp_ln11_reg_347_pp1_iter2_reg, "icmp_ln11_reg_347_pp1_iter2_reg");
    sc_trace(mVcdFile, j_fu_250_p2, "j_fu_250_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, zext_ln12_fu_256_p1, "zext_ln12_fu_256_p1");
    sc_trace(mVcdFile, zext_ln12_reg_356, "zext_ln12_reg_356");
    sc_trace(mVcdFile, zext_ln12_reg_356_pp1_iter1_reg, "zext_ln12_reg_356_pp1_iter1_reg");
    sc_trace(mVcdFile, zext_ln12_reg_356_pp1_iter2_reg, "zext_ln12_reg_356_pp1_iter2_reg");
    sc_trace(mVcdFile, temp1_q0, "temp1_q0");
    sc_trace(mVcdFile, temp1_load_reg_366, "temp1_load_reg_366");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, mul_ln12_fu_261_p2, "mul_ln12_fu_261_p2");
    sc_trace(mVcdFile, mul_ln12_reg_371, "mul_ln12_reg_371");
    sc_trace(mVcdFile, icmp_ln14_fu_266_p2, "icmp_ln14_fu_266_p2");
    sc_trace(mVcdFile, icmp_ln14_reg_376, "icmp_ln14_reg_376");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_block_state14_pp2_stage0_iter0, "ap_block_state14_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state15_pp2_stage0_iter1, "ap_block_state15_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, k_fu_272_p2, "k_fu_272_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, zext_ln15_fu_278_p1, "zext_ln15_fu_278_p1");
    sc_trace(mVcdFile, zext_ln15_reg_385, "zext_ln15_reg_385");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state9, "ap_condition_pp1_exit_iter0_state9");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter3, "ap_enable_reg_pp1_iter3");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state14, "ap_condition_pp2_exit_iter0_state14");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, temp1_address0, "temp1_address0");
    sc_trace(mVcdFile, temp1_ce0, "temp1_ce0");
    sc_trace(mVcdFile, temp1_we0, "temp1_we0");
    sc_trace(mVcdFile, temp2_address0, "temp2_address0");
    sc_trace(mVcdFile, temp2_ce0, "temp2_ce0");
    sc_trace(mVcdFile, temp2_we0, "temp2_we0");
    sc_trace(mVcdFile, temp2_q0, "temp2_q0");
    sc_trace(mVcdFile, temp3_address0, "temp3_address0");
    sc_trace(mVcdFile, temp3_ce0, "temp3_ce0");
    sc_trace(mVcdFile, temp3_we0, "temp3_we0");
    sc_trace(mVcdFile, temp3_q0, "temp3_q0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
#endif

    }
    mHdltvinHandle.open("foo_b.hdltvin.dat");
    mHdltvoutHandle.open("foo_b.hdltvout.dat");
}

foo_b::~foo_b() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete temp1_U;
    delete temp2_U;
    delete temp3_U;
}

void foo_b::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter3 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state9.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state9.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state9.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter3 = ap_enable_reg_pp1_iter2.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
            ap_enable_reg_pp1_iter3 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state14.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state14.read()))) {
            ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state14.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln7_fu_218_p2.read(), ap_const_lv1_0))) {
        i_0_reg_181 = i_fu_224_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_0_reg_181 = ap_const_lv15_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        j_0_reg_192 = ap_const_lv15_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_fu_244_p2.read()))) {
        j_0_reg_192 = j_fu_250_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        k_0_reg_203 = ap_const_lv15_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_266_p2.read()))) {
        k_0_reg_203 = k_fu_272_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_reg_306.read(), ap_const_lv1_0))) {
        data_in_load_reg_326 = data_in_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln11_reg_347 = icmp_ln11_fu_244_p2.read();
        icmp_ln11_reg_347_pp1_iter1_reg = icmp_ln11_reg_347.read();
        zext_ln12_reg_356_pp1_iter1_reg = zext_ln12_reg_356.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln11_reg_347_pp1_iter2_reg = icmp_ln11_reg_347_pp1_iter1_reg.read();
        zext_ln12_reg_356_pp1_iter2_reg = zext_ln12_reg_356_pp1_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln14_reg_376 = icmp_ln14_fu_266_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln7_reg_306 = icmp_ln7_fu_218_p2.read();
        icmp_ln7_reg_306_pp0_iter1_reg = icmp_ln7_reg_306.read();
        zext_ln8_reg_315_pp0_iter1_reg = zext_ln8_reg_315.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln7_reg_306_pp0_iter2_reg = icmp_ln7_reg_306_pp0_iter1_reg.read();
        zext_ln8_reg_315_pp0_iter2_reg = zext_ln8_reg_315_pp0_iter1_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_reg_347_pp1_iter1_reg.read()))) {
        mul_ln12_reg_371 = mul_ln12_fu_261_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_reg_306_pp0_iter1_reg.read(), ap_const_lv1_0))) {
        mul_ln8_reg_332 = mul_ln8_fu_235_p2.read();
        mul_ln9_reg_337 = mul_ln9_fu_240_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()))) {
        reg_214 = scale_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        scale_load_1_reg_301 = scale_q1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_reg_347.read()))) {
        temp1_load_reg_366 = temp1_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_fu_244_p2.read()))) {
        zext_ln12_reg_356 = zext_ln12_fu_256_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_fu_266_p2.read()))) {
        zext_ln15_reg_385 = zext_ln15_fu_278_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_fu_218_p2.read(), ap_const_lv1_0))) {
        zext_ln8_reg_315 = zext_ln8_fu_230_p1.read();
    }
}

void foo_b::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void foo_b::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[5];
}

void foo_b::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[7];
}

void foo_b::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void foo_b::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[6];
}

void foo_b::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[8];
}

void foo_b::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void foo_b::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[3];
}

void foo_b::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[4];
}

void foo_b::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_state10_pp1_stage0_iter1() {
    ap_block_state10_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_state11_pp1_stage0_iter2() {
    ap_block_state11_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_state12_pp1_stage0_iter3() {
    ap_block_state12_pp1_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_state14_pp2_stage0_iter0() {
    ap_block_state14_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_state15_pp2_stage0_iter1() {
    ap_block_state15_pp2_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_block_state9_pp1_stage0_iter0() {
    ap_block_state9_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void foo_b::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln7_fu_218_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void foo_b::thread_ap_condition_pp1_exit_iter0_state9() {
    if (esl_seteq<1,1,1>(icmp_ln11_fu_244_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state9 = ap_const_logic_0;
    }
}

void foo_b::thread_ap_condition_pp2_exit_iter0_state14() {
    if (esl_seteq<1,1,1>(icmp_ln14_fu_266_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp2_exit_iter0_state14 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state14 = ap_const_logic_0;
    }
}

void foo_b::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void foo_b::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void foo_b::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void foo_b::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void foo_b::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void foo_b::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void foo_b::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter3.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void foo_b::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void foo_b::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void foo_b::thread_data_in_address0() {
    data_in_address0 =  (sc_lv<14>) (zext_ln8_fu_230_p1.read());
}

void foo_b::thread_data_in_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()))) {
        data_in_ce0 = ap_const_logic_1;
    } else {
        data_in_ce0 = ap_const_logic_0;
    }
}

void foo_b::thread_data_out_address0() {
    data_out_address0 =  (sc_lv<14>) (zext_ln15_reg_385.read());
}

void foo_b::thread_data_out_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()))) {
        data_out_ce0 = ap_const_logic_1;
    } else {
        data_out_ce0 = ap_const_logic_0;
    }
}

void foo_b::thread_data_out_d0() {
    data_out_d0 = (!temp2_q0.read().is_01() || !temp3_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(temp2_q0.read()) + sc_biguint<32>(temp3_q0.read()));
}

void foo_b::thread_data_out_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln14_reg_376.read()))) {
        data_out_we0 = ap_const_logic_1;
    } else {
        data_out_we0 = ap_const_logic_0;
    }
}

void foo_b::thread_i_fu_224_p2() {
    i_fu_224_p2 = (!i_0_reg_181.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(i_0_reg_181.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void foo_b::thread_icmp_ln11_fu_244_p2() {
    icmp_ln11_fu_244_p2 = (!j_0_reg_192.read().is_01() || !ap_const_lv15_4000.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_192.read() == ap_const_lv15_4000);
}

void foo_b::thread_icmp_ln14_fu_266_p2() {
    icmp_ln14_fu_266_p2 = (!k_0_reg_203.read().is_01() || !ap_const_lv15_4000.is_01())? sc_lv<1>(): sc_lv<1>(k_0_reg_203.read() == ap_const_lv15_4000);
}

void foo_b::thread_icmp_ln7_fu_218_p2() {
    icmp_ln7_fu_218_p2 = (!i_0_reg_181.read().is_01() || !ap_const_lv15_4000.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_181.read() == ap_const_lv15_4000);
}

void foo_b::thread_j_fu_250_p2() {
    j_fu_250_p2 = (!j_0_reg_192.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(j_0_reg_192.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void foo_b::thread_k_fu_272_p2() {
    k_fu_272_p2 = (!k_0_reg_203.read().is_01() || !ap_const_lv15_1.is_01())? sc_lv<15>(): (sc_biguint<15>(k_0_reg_203.read()) + sc_biguint<15>(ap_const_lv15_1));
}

void foo_b::thread_mul_ln12_fu_261_p2() {
    mul_ln12_fu_261_p2 = (!temp1_load_reg_366.read().is_01() || !reg_214.read().is_01())? sc_lv<32>(): sc_bigint<32>(temp1_load_reg_366.read()) * sc_bigint<32>(reg_214.read());
}

void foo_b::thread_mul_ln8_fu_235_p2() {
    mul_ln8_fu_235_p2 = (!data_in_load_reg_326.read().is_01() || !reg_214.read().is_01())? sc_lv<32>(): sc_bigint<32>(data_in_load_reg_326.read()) * sc_bigint<32>(reg_214.read());
}

void foo_b::thread_mul_ln9_fu_240_p2() {
    mul_ln9_fu_240_p2 = (!data_in_load_reg_326.read().is_01() || !scale_load_1_reg_301.read().is_01())? sc_lv<32>(): sc_bigint<32>(data_in_load_reg_326.read()) * sc_bigint<32>(scale_load_1_reg_301.read());
}

void foo_b::thread_scale_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        scale_address0 =  (sc_lv<2>) (ap_const_lv64_2);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        scale_address0 =  (sc_lv<2>) (ap_const_lv64_0);
    } else {
        scale_address0 = "XX";
    }
}

void foo_b::thread_scale_address1() {
    scale_address1 =  (sc_lv<2>) (ap_const_lv64_1);
}

void foo_b::thread_scale_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
          esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1)) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        scale_ce0 = ap_const_logic_1;
    } else {
        scale_ce0 = ap_const_logic_0;
    }
}

void foo_b::thread_scale_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        scale_ce1 = ap_const_logic_1;
    } else {
        scale_ce1 = ap_const_logic_0;
    }
}

void foo_b::thread_temp1_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        temp1_address0 =  (sc_lv<14>) (zext_ln12_fu_256_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        temp1_address0 =  (sc_lv<14>) (zext_ln8_reg_315_pp0_iter2_reg.read());
    } else {
        temp1_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void foo_b::thread_temp1_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())))) {
        temp1_ce0 = ap_const_logic_1;
    } else {
        temp1_ce0 = ap_const_logic_0;
    }
}

void foo_b::thread_temp1_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(icmp_ln7_reg_306_pp0_iter2_reg.read(), ap_const_lv1_0))) {
        temp1_we0 = ap_const_logic_1;
    } else {
        temp1_we0 = ap_const_logic_0;
    }
}

void foo_b::thread_temp2_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0))) {
        temp2_address0 =  (sc_lv<14>) (zext_ln15_fu_278_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()))) {
        temp2_address0 =  (sc_lv<14>) (zext_ln8_reg_315_pp0_iter2_reg.read());
    } else {
        temp2_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void foo_b::thread_temp2_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read())))) {
        temp2_ce0 = ap_const_logic_1;
    } else {
        temp2_ce0 = ap_const_logic_0;
    }
}

void foo_b::thread_temp2_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(icmp_ln7_reg_306_pp0_iter2_reg.read(), ap_const_lv1_0))) {
        temp2_we0 = ap_const_logic_1;
    } else {
        temp2_we0 = ap_const_logic_0;
    }
}

void foo_b::thread_temp3_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0))) {
        temp3_address0 =  (sc_lv<14>) (zext_ln15_fu_278_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()))) {
        temp3_address0 =  (sc_lv<14>) (zext_ln12_reg_356_pp1_iter2_reg.read());
    } else {
        temp3_address0 =  (sc_lv<14>) ("XXXXXXXXXXXXXX");
    }
}

void foo_b::thread_temp3_ce0() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read())))) {
        temp3_ce0 = ap_const_logic_1;
    } else {
        temp3_ce0 = ap_const_logic_0;
    }
}

void foo_b::thread_temp3_we0() {
    if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln11_reg_347_pp1_iter2_reg.read()))) {
        temp3_we0 = ap_const_logic_1;
    } else {
        temp3_we0 = ap_const_logic_0;
    }
}

void foo_b::thread_zext_ln12_fu_256_p1() {
    zext_ln12_fu_256_p1 = esl_zext<64,15>(j_0_reg_192.read());
}

void foo_b::thread_zext_ln15_fu_278_p1() {
    zext_ln15_fu_278_p1 = esl_zext<64,15>(k_0_reg_203.read());
}

void foo_b::thread_zext_ln8_fu_230_p1() {
    zext_ln8_fu_230_p1 = esl_zext<64,15>(i_0_reg_181.read());
}

void foo_b::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln7_fu_218_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln7_fu_218_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            break;
        case 32 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln11_fu_244_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter3.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter2.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln11_fu_244_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state13;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            break;
        case 128 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln14_fu_266_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln14_fu_266_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<9>) ("XXXXXXXXX");
            break;
    }
}

void foo_b::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_address0\" :  \"" << data_in_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_in_ce0\" :  \"" << data_in_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"data_in_q0\" :  \"" << data_in_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"scale_address0\" :  \"" << scale_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"scale_ce0\" :  \"" << scale_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"scale_q0\" :  \"" << scale_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"scale_address1\" :  \"" << scale_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"scale_ce1\" :  \"" << scale_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"scale_q1\" :  \"" << scale_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_address0\" :  \"" << data_out_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_ce0\" :  \"" << data_out_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_we0\" :  \"" << data_out_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"data_out_d0\" :  \"" << data_out_d0.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

